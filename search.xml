<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Informatqique TP9</title>
      <link href="/2019/12/12/TP%2010/"/>
      <url>/2019/12/12/TP%2010/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">traget_direct</span><span class="params">(carte, st1, st2)</span>:</span></span><br><span class="line">    <span class="string">""" dict[str: set[str]]*str*str -&gt; bool """</span></span><br><span class="line">    <span class="keyword">return</span> st2 <span class="keyword">in</span> carte[st1]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ajout_station</span><span class="params">(station, correspondances,carte)</span>:</span></span><br><span class="line">    <span class="string">""" str*set[str]* dict[str:set[str]] -&gt; dict[str:set[str]] """</span></span><br><span class="line">    carte[station] = correspondances</span><br><span class="line">    <span class="comment"># s: str</span></span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> correspondances:</span><br><span class="line">        carte[s] = carte[s] + station</span><br><span class="line">    <span class="keyword">return</span>  carte</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">stations_atteignables</span><span class="params">(carte, depart, k)</span>:</span></span><br><span class="line">    <span class="string">""" dict[str:set[str]]*str*int -&gt; set[str] """</span></span><br><span class="line">    <span class="keyword">if</span> k == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> &#123;depart&#125;</span><br><span class="line">    <span class="comment"># destinations: set[str]</span></span><br><span class="line">    destinations = set()</span><br><span class="line">    <span class="keyword">if</span> k &gt;= <span class="number">1</span>:</span><br><span class="line">        destinations = carte[depart]</span><br><span class="line">    <span class="comment"># temp: set[str]</span></span><br><span class="line">    temp = set()</span><br><span class="line">    <span class="keyword">while</span> k &gt; <span class="number">1</span>:</span><br><span class="line">        <span class="comment"># s: str</span></span><br><span class="line">        <span class="keyword">for</span> s <span class="keyword">in</span> destinations:</span><br><span class="line">            temp = temp + carte[s]</span><br><span class="line">        destinations = temp</span><br><span class="line">        temp = set()</span><br><span class="line">        k = k - <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> destinations</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">compteur_changements</span><span class="params">(carte, depart, arrivee)</span>:</span></span><br><span class="line">    <span class="string">""" dict[str:set[str]]*str*str -&gt; int """</span></span><br><span class="line">    compteur = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> arrivee <span class="keyword">not</span> <span class="keyword">in</span> stations_atteignables(carte,depart,compteur):</span><br><span class="line">        compteur = compteur + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> compteur</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">existence_trajet</span><span class="params">(carte, depart, arrivee)</span>:</span></span><br><span class="line">    <span class="string">""" dict[str:set[str]]*str*str -&gt; bool """</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(carte)):</span><br><span class="line">        <span class="keyword">if</span> arrivee <span class="keyword">in</span> stations_atteignables(carte,depart,i):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Informatqique TP9</title>
      <link href="/2019/12/03/Informatqique-TP9/"/>
      <url>/2019/12/03/Informatqique-TP9/</url>
      
        <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 9.2</span></span><br><span class="line"><span class="comment"># Base:dict[str:float]</span></span><br><span class="line">Base = &#123;<span class="string">'Sabre laser'</span>: <span class="number">229.0</span>,</span><br><span class="line">        <span class="string">'Mitendo DX'</span>: <span class="number">127.3</span>, <span class="string">'Coussin Linux'</span>: <span class="number">374.5</span>,</span><br><span class="line">        <span class="string">'Slip Goldorak'</span>: <span class="number">29.90</span>,</span><br><span class="line">        <span class="string">'Station Nextpresso'</span>: <span class="number">184.6</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">disponibilite</span><span class="params">(prod, base)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    str*dict[str:float]-&gt;bool</span></span><br><span class="line"><span class="string">    retourne True si le produit est présent dans la base, ou False sinon.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">return</span> prod <span class="keyword">in</span> base</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> disponibilite(<span class="string">'Sabre laser'</span>, Base)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">prix_moyen</span><span class="params">(base)</span>:</span></span><br><span class="line">    <span class="string">"""dict[str:float]-&gt;float</span></span><br><span class="line"><span class="string">    hyp:len(base)&gt;0"""</span></span><br><span class="line">    <span class="comment"># somme:float</span></span><br><span class="line">    somme = <span class="number">0</span></span><br><span class="line">    <span class="comment"># i:str</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> base:</span><br><span class="line">        somme = somme + base[i]</span><br><span class="line">    <span class="keyword">return</span> somme / len(base)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> prix_moyen(&#123;<span class="string">'Sabre Laser'</span>: <span class="number">229.0</span>,</span><br><span class="line">                   <span class="string">'Mitendo DX'</span>: <span class="number">127.30</span>,</span><br><span class="line">                   <span class="string">'Coussin Linux'</span>: <span class="number">74.50</span>,</span><br><span class="line">                   <span class="string">'Slip Goldorak'</span>: <span class="number">29.90</span>,</span><br><span class="line">                   <span class="string">'Station Nextpresso'</span>: <span class="number">184.60</span>&#125;) == <span class="number">129.06</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fourchette_prix</span><span class="params">(min, max, base)</span>:</span></span><br><span class="line">    <span class="string">"""float*float*dict[str:float]-&gt;set[str]"""</span></span><br><span class="line">    <span class="keyword">return</span> &#123;s <span class="keyword">for</span> s, prix <span class="keyword">in</span> base.items() <span class="keyword">if</span> prix &gt;= min <span class="keyword">and</span> prix &lt;= max&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> fourchette_prix(<span class="number">50.0</span>,</span><br><span class="line">                       <span class="number">200.0</span>,</span><br><span class="line">                       &#123;<span class="string">'Sabre Laser'</span>: <span class="number">229.0</span>,</span><br><span class="line">                        <span class="string">'Mitendo DX'</span>: <span class="number">127.30</span>,</span><br><span class="line">                        <span class="string">'Coussin Linux'</span>: <span class="number">74.50</span>,</span><br><span class="line">                        <span class="string">'Slip Goldorak'</span>: <span class="number">29.90</span>,</span><br><span class="line">                        <span class="string">'Station Nextpresso'</span>: <span class="number">184.60</span>&#125;) == &#123;<span class="string">'Coussin Linux'</span>,</span><br><span class="line">                                                           <span class="string">'Mitendo DX'</span>,</span><br><span class="line">                                                           <span class="string">'Station Nextpresso'</span>&#125;</span><br><span class="line"><span class="comment"># panier:dict[str:int]</span></span><br><span class="line">panier = &#123;<span class="string">"Sabre laser"</span>: <span class="number">3</span>, <span class="string">"Coussin Linux"</span>: <span class="number">2</span>, <span class="string">"Slip Goldorak"</span>: <span class="number">1</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tous_disponibles</span><span class="params">(panier, base)</span>:</span></span><br><span class="line">    <span class="string">"""dict[str:int]*dict[str:float]-&gt;bool"""</span></span><br><span class="line">    <span class="comment"># i:str</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> panier:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> base:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> tous_disponibles(panier, Base)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">prix_achats</span><span class="params">(panier, base)</span>:</span></span><br><span class="line">    <span class="string">"""dict[str:int]*dict[str:float]-&gt;float"""</span></span><br><span class="line">    <span class="comment"># somme:float</span></span><br><span class="line">    somme = <span class="number">0</span></span><br><span class="line">    <span class="comment"># s:str</span></span><br><span class="line">    <span class="comment"># n:int</span></span><br><span class="line">    <span class="keyword">for</span> s, n <span class="keyword">in</span> panier.items():</span><br><span class="line">        somme = somme + n * base[s]</span><br><span class="line">    <span class="keyword">return</span> somme</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> prix_achats(&#123;<span class="string">'Sabre Laser'</span>: <span class="number">3</span>,</span><br><span class="line">                    <span class="string">'Coussin Linux'</span>: <span class="number">2</span>,</span><br><span class="line">                    <span class="string">'Slip Goldorak'</span>: <span class="number">1</span>&#125;,</span><br><span class="line">                   &#123;<span class="string">'Sabre Laser'</span>: <span class="number">229.0</span>,</span><br><span class="line">                    <span class="string">'Mitendo DX'</span>: <span class="number">127.30</span>,</span><br><span class="line">                    <span class="string">'Coussin Linux'</span>: <span class="number">74.50</span>,</span><br><span class="line">                    <span class="string">'Slip Goldorak'</span>: <span class="number">29.90</span>,</span><br><span class="line">                    <span class="string">'Station Nextpresso'</span>: <span class="number">184.60</span>&#125;) == <span class="number">865.9</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 9.5</span></span><br><span class="line"><span class="comment"># Dict_Ang_Fra : dict[str:str]</span></span><br><span class="line">Dict_Ang_Fra = &#123;</span><br><span class="line">    <span class="string">'the'</span>: <span class="string">'le'</span>,</span><br><span class="line">    <span class="string">'cat'</span>: <span class="string">'chat'</span>,</span><br><span class="line">    <span class="string">'fish'</span>: <span class="string">'poisson'</span>,</span><br><span class="line">    <span class="string">'catches'</span>: <span class="string">'attrape'</span>&#125;</span><br><span class="line"><span class="comment"># Dict_Fra_Ita : dict[str:str]</span></span><br><span class="line">Dict_Fra_Ita = &#123;</span><br><span class="line">    <span class="string">'le'</span>: <span class="string">'il'</span>,</span><br><span class="line">    <span class="string">'chat'</span>: <span class="string">'gatto'</span>,</span><br><span class="line">    <span class="string">'poisson'</span>: <span class="string">'pesce'</span>,</span><br><span class="line">    <span class="string">'attrape'</span>: <span class="string">'cattura'</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">est_lettre</span><span class="params">(c)</span>:</span></span><br><span class="line">    <span class="string">""" str -&gt; bool</span></span><br><span class="line"><span class="string">    Hypothèse : len(c) == 1 (caractère) Retourne True si le caractère c est une lettre, ou False sinon."""</span></span><br><span class="line">    <span class="keyword">return</span> ((c &gt;= <span class="string">'a'</span>) <span class="keyword">and</span> (c &lt;= <span class="string">'z'</span>)) <span class="keyword">or</span> ((c &gt;= <span class="string">'A'</span>) <span class="keyword">and</span> (</span><br><span class="line">        c &lt;= <span class="string">'Z'</span>)) <span class="keyword">or</span> (c <span class="keyword">in</span> &#123;<span class="string">'é'</span>, <span class="string">'è'</span>, <span class="string">'à'</span>, <span class="string">'ù'</span>, <span class="string">'œ'</span>&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Jeu de tests</span></span><br><span class="line"><span class="keyword">assert</span> est_lettre(<span class="string">'a'</span>)</span><br><span class="line"><span class="keyword">assert</span> est_lettre(<span class="string">'Z'</span>)</span><br><span class="line"><span class="keyword">assert</span> est_lettre(<span class="string">','</span>) == <span class="literal">False</span></span><br><span class="line"><span class="keyword">assert</span> est_lettre(<span class="string">'1'</span>) == <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">frequences_lettres</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="string">"""str-&gt;dict[str:int]"""</span></span><br><span class="line">    <span class="comment"># se:set[str]</span></span><br><span class="line">    se = &#123;</span><br><span class="line">        <span class="string">'.'</span>,</span><br><span class="line">        <span class="string">'|'</span>,</span><br><span class="line">        <span class="string">'!'</span>,</span><br><span class="line">        <span class="string">'\\'</span>,</span><br><span class="line">        <span class="string">'&#125;'</span>,</span><br><span class="line">        <span class="string">']'</span>,</span><br><span class="line">        <span class="string">'('</span>,</span><br><span class="line">        <span class="string">"'"</span>,</span><br><span class="line">        <span class="string">'%'</span>,</span><br><span class="line">        <span class="string">'@'</span>,</span><br><span class="line">        <span class="string">'&#123;'</span>,</span><br><span class="line">        <span class="string">'+'</span>,</span><br><span class="line">        <span class="string">'$'</span>,</span><br><span class="line">        <span class="string">' '</span>,</span><br><span class="line">        <span class="string">'/'</span>,</span><br><span class="line">        <span class="string">'~'</span>,</span><br><span class="line">        <span class="string">')'</span>,</span><br><span class="line">        <span class="string">'^'</span>,</span><br><span class="line">        <span class="string">'&amp;'</span>,</span><br><span class="line">        <span class="string">','</span>,</span><br><span class="line">        <span class="string">'-'</span>,</span><br><span class="line">        <span class="string">'='</span>,</span><br><span class="line">        <span class="string">'&gt;'</span>,</span><br><span class="line">        <span class="string">'['</span>,</span><br><span class="line">        <span class="string">'*'</span>,</span><br><span class="line">        <span class="string">'#'</span>,</span><br><span class="line">        <span class="string">'_'</span>,</span><br><span class="line">        <span class="string">':'</span>,</span><br><span class="line">        <span class="string">'"'</span>,</span><br><span class="line">        <span class="string">';'</span>,</span><br><span class="line">        <span class="string">'&lt;'</span>,</span><br><span class="line">        <span class="string">'?'</span>&#125;</span><br><span class="line">    <span class="comment"># dic:dict[str:int]</span></span><br><span class="line">    dic = dict()</span><br><span class="line">    <span class="comment"># i:str</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> se:</span><br><span class="line">            <span class="keyword">if</span> i <span class="keyword">in</span> dic:</span><br><span class="line">                dic[i] = dic[i] + <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                dic[i] = <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> dic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> frequences_lettres(<span class="string">'alea jacta est'</span>) == &#123;</span><br><span class="line">    <span class="string">'j'</span>: <span class="number">1</span>, <span class="string">'e'</span>: <span class="number">2</span>, <span class="string">'t'</span>: <span class="number">2</span>, <span class="string">'c'</span>: <span class="number">1</span>, <span class="string">'a'</span>: <span class="number">4</span>, <span class="string">'s'</span>: <span class="number">1</span>, <span class="string">'l'</span>: <span class="number">1</span>&#125;</span><br><span class="line"><span class="keyword">assert</span> frequences_lettres(<span class="string">"l'élève"</span>) == &#123;</span><br><span class="line">    <span class="string">'é'</span>: <span class="number">1</span>, <span class="string">'e'</span>: <span class="number">1</span>, <span class="string">'v'</span>: <span class="number">1</span>, <span class="string">'l'</span>: <span class="number">2</span>, <span class="string">'è'</span>: <span class="number">1</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lettre_freq_max</span><span class="params">(dic)</span>:</span></span><br><span class="line">    <span class="string">"""dict[str:int]-&gt;str"""</span></span><br><span class="line">    <span class="comment"># max:int</span></span><br><span class="line">    max = <span class="number">0</span></span><br><span class="line">    <span class="comment"># s:str</span></span><br><span class="line">    s = <span class="string">''</span></span><br><span class="line">    <span class="comment"># a:str</span></span><br><span class="line">    <span class="comment"># b:int</span></span><br><span class="line">    <span class="keyword">for</span> a, b <span class="keyword">in</span> dic.items():</span><br><span class="line">        <span class="keyword">if</span> b &gt; max:</span><br><span class="line">            max = b</span><br><span class="line">            s = a</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> lettre_freq_max(frequences_lettres(<span class="string">'alea jacta est'</span>)) == <span class="string">'a'</span></span><br><span class="line"><span class="keyword">assert</span> lettre_freq_max(frequences_lettres(<span class="string">"l'élève"</span>)) == <span class="string">'l'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lettres_freq_inf</span><span class="params">(dic, n)</span>:</span></span><br><span class="line">    <span class="string">"""dict[str:int]*int-&gt;set[str]"""</span></span><br><span class="line">    <span class="comment"># SE:set[str]</span></span><br><span class="line">    SE = set()</span><br><span class="line">    <span class="comment"># a:str</span></span><br><span class="line">    <span class="comment"># b:int</span></span><br><span class="line">    <span class="keyword">for</span> a, b <span class="keyword">in</span> dic.items():</span><br><span class="line">        <span class="keyword">if</span> b &lt;= n:</span><br><span class="line">            SE.add(a)</span><br><span class="line">    <span class="keyword">return</span> SE</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> lettres_freq_inf(</span><br><span class="line">    frequences_lettres(<span class="string">'alea jacta est'</span>), <span class="number">1</span>) == &#123;</span><br><span class="line">        <span class="string">'c'</span>, <span class="string">'j'</span>, <span class="string">'l'</span>, <span class="string">'s'</span>&#125;</span><br><span class="line"><span class="keyword">assert</span> lettres_freq_inf(frequences_lettres(<span class="string">"l'élève"</span>), <span class="number">2</span>) == &#123;</span><br><span class="line">    <span class="string">'e'</span>, <span class="string">'l'</span>, <span class="string">'v'</span>, <span class="string">'è'</span>, <span class="string">'é'</span>&#125;</span><br><span class="line"><span class="comment"># 9.6</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">traduction_mot_a_mot</span><span class="params">(L, dic)</span>:</span></span><br><span class="line">    <span class="string">"""list[str]*dict[str:str]-&gt;list[str]"""</span></span><br><span class="line">    <span class="comment"># LR:list[str]</span></span><br><span class="line">    LR = []</span><br><span class="line">    <span class="comment"># i:str</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> L:</span><br><span class="line">        LR.append(dic[i])</span><br><span class="line">    <span class="keyword">return</span> LR</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> traduction_mot_a_mot([], Dict_Ang_Fra) == []</span><br><span class="line"><span class="keyword">assert</span> traduction_mot_a_mot([<span class="string">'cat'</span>], Dict_Ang_Fra) == [<span class="string">'chat'</span>]</span><br><span class="line"><span class="keyword">assert</span> traduction_mot_a_mot([<span class="string">'the'</span>, <span class="string">'cat'</span>, <span class="string">'catches'</span>, <span class="string">'the'</span>, <span class="string">'fish'</span>], Dict_Ang_Fra) == [</span><br><span class="line">    <span class="string">'le'</span>, <span class="string">'chat'</span>, <span class="string">'attrape'</span>, <span class="string">'le'</span>, <span class="string">'poisson'</span>]</span><br><span class="line"><span class="keyword">assert</span> traduction_mot_a_mot([<span class="string">'le'</span>, <span class="string">'chat'</span>, <span class="string">'attrape'</span>, <span class="string">'le'</span>, <span class="string">'poisson'</span>], Dict_Fra_Ita) == [</span><br><span class="line">    <span class="string">'il'</span>, <span class="string">'gatto'</span>, <span class="string">'cattura'</span>, <span class="string">'il'</span>, <span class="string">'pesce'</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dictionnaire_inverse</span><span class="params">(dic)</span>:</span></span><br><span class="line">    <span class="string">"""dict[str:str]-&gt;dict[str:str]"""</span></span><br><span class="line">    <span class="comment"># DIC:dict[str:str]</span></span><br><span class="line">    DIC = dict()</span><br><span class="line">    <span class="comment"># a:str</span></span><br><span class="line">    <span class="comment"># b:str</span></span><br><span class="line">    <span class="keyword">for</span> a, b <span class="keyword">in</span> dic.items():</span><br><span class="line">        DIC[b] = a</span><br><span class="line">    <span class="keyword">return</span> DIC</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> dictionnaire_inverse(&#123;<span class="string">"cat"</span>: <span class="string">"chat"</span>&#125;) == &#123;<span class="string">'chat'</span>: <span class="string">'cat'</span>&#125;</span><br><span class="line"><span class="keyword">assert</span> dictionnaire_inverse(Dict_Ang_Fra) == &#123;</span><br><span class="line">    <span class="string">'poisson'</span>: <span class="string">'fish'</span>,</span><br><span class="line">    <span class="string">'le'</span>: <span class="string">'the'</span>,</span><br><span class="line">    <span class="string">'chat'</span>: <span class="string">'cat'</span>,</span><br><span class="line">    <span class="string">'attrape'</span>: <span class="string">'catches'</span>&#125;</span><br><span class="line"><span class="keyword">assert</span> dictionnaire_inverse(Dict_Fra_Ita) == &#123;</span><br><span class="line">    <span class="string">'pesce'</span>: <span class="string">'poisson'</span>,</span><br><span class="line">    <span class="string">'il'</span>: <span class="string">'le'</span>,</span><br><span class="line">    <span class="string">'gatto'</span>: <span class="string">'chat'</span>,</span><br><span class="line">    <span class="string">'cattura'</span>: <span class="string">'attrape'</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">composition_dictionnaires</span><span class="params">(dic1, dic2)</span>:</span></span><br><span class="line">    <span class="string">"""dict[str:str]*dict[str:str]-&gt;dict[str:str]"""</span></span><br><span class="line">    <span class="comment"># DIC:dict[str:str]</span></span><br><span class="line">    DIC = dict()</span><br><span class="line">    <span class="comment"># a:str</span></span><br><span class="line">    <span class="comment"># b:str</span></span><br><span class="line">    <span class="keyword">for</span> a, b <span class="keyword">in</span> dic1.items():</span><br><span class="line">        DIC[a] = dic2[b]</span><br><span class="line">    <span class="keyword">return</span> DIC</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> composition_dictionnaires(&#123;<span class="string">"chat"</span>: <span class="string">"cat"</span>&#125;, &#123;<span class="string">"cat"</span>: <span class="string">"gatto"</span>&#125;) == &#123;</span><br><span class="line">    <span class="string">'chat'</span>: <span class="string">'gatto'</span>&#125;</span><br><span class="line"><span class="keyword">assert</span> composition_dictionnaires(</span><br><span class="line">    Dict_Ang_Fra,</span><br><span class="line">    Dict_Fra_Ita) == &#123;</span><br><span class="line">        <span class="string">'fish'</span>: <span class="string">'pesce'</span>,</span><br><span class="line">        <span class="string">'catches'</span>: <span class="string">'cattura'</span>,</span><br><span class="line">        <span class="string">'the'</span>: <span class="string">'il'</span>,</span><br><span class="line">    <span class="string">'cat'</span>: <span class="string">'gatto'</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 9.7</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">valeur_decomposition</span><span class="params">(dic)</span>:</span></span><br><span class="line">    <span class="string">"""dict[int:int]-&gt;int"""</span></span><br><span class="line">    <span class="comment"># aac:int</span></span><br><span class="line">    aac = <span class="number">1</span></span><br><span class="line">    <span class="comment"># i:int</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> dic:</span><br><span class="line">        aac = aac * (i**dic[i])</span><br><span class="line">    <span class="keyword">return</span> aac</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> valeur_decomposition(&#123;<span class="number">2</span>: <span class="number">1</span>, <span class="number">3</span>: <span class="number">1</span>, <span class="number">5</span>: <span class="number">1</span>&#125;) == <span class="number">30</span></span><br><span class="line"><span class="keyword">assert</span> valeur_decomposition(&#123;<span class="number">2</span>: <span class="number">3</span>, <span class="number">7</span>: <span class="number">1</span>&#125;) == <span class="number">56</span></span><br><span class="line"><span class="keyword">assert</span> valeur_decomposition(&#123;<span class="number">2</span>: <span class="number">10</span>&#125;) == <span class="number">1024</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decomposition</span><span class="params">(L)</span>:</span></span><br><span class="line">    <span class="string">"""list[int]-&gt;dict[int:int]</span></span><br><span class="line"><span class="string">    hyp:len(L)&gt;=0"""</span></span><br><span class="line">    <span class="comment"># dic:dict[int:int]</span></span><br><span class="line">    dic = dict()</span><br><span class="line">    <span class="comment"># i:int</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> L:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> dic:</span><br><span class="line">            dic[i] = dic[i] + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            dic[i] = <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> dic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> decomposition([<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>]) == &#123;<span class="number">2</span>: <span class="number">1</span>, <span class="number">3</span>: <span class="number">1</span>, <span class="number">5</span>: <span class="number">1</span>&#125;</span><br><span class="line"><span class="keyword">assert</span> decomposition([<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">7</span>]) == &#123;<span class="number">2</span>: <span class="number">3</span>, <span class="number">7</span>: <span class="number">1</span>&#125;</span><br><span class="line"><span class="keyword">assert</span> decomposition([<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>]) == &#123;<span class="number">2</span>: <span class="number">10</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(k)</span>:</span></span><br><span class="line">    <span class="string">"""int-&gt;tuple[int,int]</span></span><br><span class="line"><span class="string">    hyp:k&gt;=2"""</span></span><br><span class="line">    <span class="comment"># IN:int</span></span><br><span class="line">    IN = k</span><br><span class="line">    <span class="comment"># i:int</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>, IN + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> IN % i == <span class="number">0</span>:</span><br><span class="line">            IN = int(IN / i)</span><br><span class="line">            <span class="keyword">return</span> (IN, i)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> f(<span class="number">2</span>) == (<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">liste_facteurs_premiers</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="string">"""int-&gt;list[int]</span></span><br><span class="line"><span class="string">    hyp:n&gt;=2"""</span></span><br><span class="line">    <span class="comment"># l:list[int]</span></span><br><span class="line">    l = []</span><br><span class="line">    <span class="comment"># IN:int</span></span><br><span class="line">    IN = n</span><br><span class="line">    <span class="comment"># i:int</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> IN != <span class="number">1</span>:</span><br><span class="line">        IN, i = f(IN)</span><br><span class="line">        l.append(i)</span><br><span class="line">    <span class="keyword">return</span> l</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> liste_facteurs_premiers(<span class="number">30</span>) == [<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>]</span><br><span class="line"><span class="keyword">assert</span> liste_facteurs_premiers(<span class="number">56</span>) == [<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">7</span>]</span><br><span class="line"><span class="keyword">assert</span> liste_facteurs_premiers(<span class="number">1024</span>) == [<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>]</span><br><span class="line"><span class="keyword">assert</span> liste_facteurs_premiers(<span class="number">13</span>) == [<span class="number">13</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decomposition_facteurs_premiers</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="string">"""int-&gt;dict[int:int]</span></span><br><span class="line"><span class="string">    hyp:n&gt;=2"""</span></span><br><span class="line">    <span class="keyword">return</span> decomposition(liste_facteurs_premiers(n))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> decomposition_facteurs_premiers(<span class="number">1024</span>) == &#123;<span class="number">2</span>: <span class="number">10</span>&#125;</span><br><span class="line"><span class="keyword">assert</span> decomposition_facteurs_premiers(<span class="number">30</span>) == &#123;<span class="number">2</span>: <span class="number">1</span>, <span class="number">3</span>: <span class="number">1</span>, <span class="number">5</span>: <span class="number">1</span>&#125;</span><br><span class="line"><span class="keyword">assert</span> decomposition_facteurs_premiers(<span class="number">56</span>) == &#123;<span class="number">2</span>: <span class="number">3</span>, <span class="number">7</span>: <span class="number">1</span>&#125;</span><br><span class="line"><span class="keyword">assert</span> decomposition_facteurs_premiers(<span class="number">13</span>) == &#123;<span class="number">13</span>: <span class="number">1</span>&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Informatique TP7</title>
      <link href="/2019/11/13/inbox(%E8%BF%87%E6%97%B6%E6%95%88%E6%80%A7%EF%BC%89/Informatique-TP7/"/>
      <url>/2019/11/13/inbox(%E8%BF%87%E6%97%B6%E6%95%88%E6%80%A7%EF%BC%89/Informatique-TP7/</url>
      
        <content type="html"><![CDATA[<h5 id="7-5"><a href="#7-5" class="headerlink" title="7.5"></a>7.5</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 7.5</span></span><br><span class="line"><span class="comment"># Q1</span></span><br><span class="line"><span class="comment"># type Etudiant = tuple[str, str, int, list[int]]</span></span><br><span class="line"><span class="comment"># BaseUPMC : list[Etudiant]</span></span><br><span class="line">BaseUPMC = [(<span class="string">'GARGA'</span>, <span class="string">'Amel'</span>, <span class="number">20231343</span>, [<span class="number">12</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">17</span>, <span class="number">9</span>]),</span><br><span class="line">            (<span class="string">'POLO'</span>, <span class="string">'Marcello'</span>, <span class="number">20342241</span>, [<span class="number">9</span>, <span class="number">11</span>, <span class="number">19</span>, <span class="number">3</span>]),</span><br><span class="line">            (<span class="string">'AMANGEAI'</span>, <span class="string">'Hildegard'</span>, <span class="number">20244229</span>, [<span class="number">15</span>, <span class="number">11</span>, <span class="number">7</span>, <span class="number">14</span>, <span class="number">12</span>]),</span><br><span class="line">            (<span class="string">'DENT'</span>, <span class="string">'Arthur'</span>, <span class="number">42424242</span>, [<span class="number">8</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">12</span>, <span class="number">5</span>]),</span><br><span class="line">            (<span class="string">'ALEZE'</span>, <span class="string">'Blaise'</span>, <span class="number">30012024</span>, [<span class="number">17</span>, <span class="number">15</span>, <span class="number">20</span>, <span class="number">14</span>, <span class="number">18</span>, <span class="number">16</span>, <span class="number">20</span>]),</span><br><span class="line">            (<span class="string">'D2'</span>, <span class="string">'R2'</span>, <span class="number">10100101</span>, [<span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>])]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">note_moyenne</span><span class="params">(l)</span>:</span></span><br><span class="line">    <span class="string">"""list[int]-&gt;float"""</span></span><br><span class="line">    <span class="comment"># somme:int</span></span><br><span class="line">    somme = <span class="number">0</span></span><br><span class="line">    <span class="comment"># i:int</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">        somme = somme + i</span><br><span class="line">    <span class="keyword">return</span> somme / len(l)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(note_moyenne([<span class="number">12</span>, <span class="number">8</span>, <span class="number">14</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">15</span>]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">moyenne_generale</span><span class="params">(L)</span>:</span></span><br><span class="line">    <span class="string">"""list[Etutiant]-&gt;float"""</span></span><br><span class="line">    <span class="comment"># somme:int</span></span><br><span class="line">    somme = <span class="number">0</span></span><br><span class="line">    <span class="comment"># l:list[int]</span></span><br><span class="line">    <span class="keyword">for</span> _, _, _, l <span class="keyword">in</span> L:</span><br><span class="line">        somme = somme + note_moyenne(l)</span><br><span class="line">    <span class="keyword">return</span> somme / len(L)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(moyenne_generale(BaseUPMC))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">top_etudiant</span><span class="params">(BD)</span>:</span></span><br><span class="line">    <span class="string">""" list[Etudiant] -&gt; tuple[str, str]</span></span><br><span class="line"><span class="string">    Hypothèse : len(BD) &gt; 0</span></span><br><span class="line"><span class="string">    retourne un étudiant de la base BD avec la meilleure</span></span><br><span class="line"><span class="string">    moyenne. Si des étudiants sont ex-aequo alors on</span></span><br><span class="line"><span class="string">    retourne le premier dans l'ordre séquentiel de la liste."""</span></span><br><span class="line">    <span class="comment"># P:Etudiant</span></span><br><span class="line">    P = ()</span><br><span class="line">    <span class="comment"># note:float</span></span><br><span class="line">    note = <span class="number">0</span></span><br><span class="line">    <span class="comment"># l:list[int]</span></span><br><span class="line">    <span class="comment"># nom:str</span></span><br><span class="line">    <span class="comment"># prenom:str</span></span><br><span class="line">    <span class="keyword">for</span> nom, prenom, _, l <span class="keyword">in</span> BD:</span><br><span class="line">        <span class="keyword">if</span> note_moyenne(l) &gt; note:</span><br><span class="line">            P = (nom, prenom)</span><br><span class="line">            note = note_moyenne(l)</span><br><span class="line">    <span class="keyword">return</span> P</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(top_etudiant(BaseUPMC))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">recherche_moyenne</span><span class="params">(x, L)</span>:</span></span><br><span class="line">    <span class="string">"""int*list[Etudiant]"""</span></span><br><span class="line">    <span class="comment"># IN:int</span></span><br><span class="line">    <span class="comment"># l:list[int]</span></span><br><span class="line">    <span class="keyword">for</span> _, _, IN, l <span class="keyword">in</span> L:</span><br><span class="line">        <span class="keyword">if</span> IN == x:</span><br><span class="line">            <span class="keyword">return</span> note_moyenne(l)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(recherche_moyenne(<span class="number">20244229</span>, BaseUPMC))</span><br></pre></td></tr></table></figure><h5 id="7-6"><a href="#7-6" class="headerlink" title="7.6"></a>7.6</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 7.6</span></span><br><span class="line"><span class="comment"># Q1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">intersection_2_listes</span><span class="params">(l1, l2)</span>:</span></span><br><span class="line">    <span class="string">""" list[int]*list[int]-&gt;list[int]</span></span><br><span class="line"><span class="string">    hyp:L1 et L2 triées en ordre croissant,</span></span><br><span class="line"><span class="string">    renvoie la liste des éléments appartenant à la fois à L1 et à L2"""</span></span><br><span class="line">    <span class="comment"># L:list[int]</span></span><br><span class="line">    L = []</span><br><span class="line">    <span class="comment"># i:int</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> l1:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> l2:</span><br><span class="line">            L.append(i)</span><br><span class="line">    <span class="keyword">return</span> L</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(intersection_2_listes([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]))</span><br><span class="line">print(intersection_2_listes([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Q2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">intersection</span><span class="params">(L)</span>:</span></span><br><span class="line">    <span class="comment"># LR:list[int]</span></span><br><span class="line">    LR = L[<span class="number">1</span>]</span><br><span class="line">    <span class="comment"># l:list[int]</span></span><br><span class="line">    <span class="keyword">for</span> l <span class="keyword">in</span> L:</span><br><span class="line">        LR = intersection_2_listes(LR, l)</span><br><span class="line">    <span class="keyword">return</span> LR</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(intersection([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>], [</span><br><span class="line">      <span class="number">2</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">7</span>], [<span class="number">0</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">9</span>]]))</span><br></pre></td></tr></table></figure><h5 id="7-7"><a href="#7-7" class="headerlink" title="7.7"></a>7.7</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 7.7</span></span><br><span class="line"><span class="comment"># CarreMagique : list[list[int]]</span></span><br><span class="line">CarreMagique = [[<span class="number">2</span>, <span class="number">7</span>, <span class="number">6</span>],</span><br><span class="line">                [<span class="number">9</span>, <span class="number">5</span>, <span class="number">1</span>],</span><br><span class="line">                [<span class="number">4</span>, <span class="number">3</span>, <span class="number">8</span>]]</span><br><span class="line"><span class="comment"># Q1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">presence</span><span class="params">(x, l)</span>:</span></span><br><span class="line">    <span class="string">"""int*list[int]-&gt;bool"""</span></span><br><span class="line">    <span class="keyword">return</span> x <span class="keyword">in</span> l</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> presence(<span class="number">5</span>, [<span class="number">9</span>, <span class="number">5</span>, <span class="number">1</span>])</span><br><span class="line"><span class="keyword">assert</span> presence(<span class="number">4</span>, [<span class="number">9</span>, <span class="number">5</span>, <span class="number">1</span>]) == <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mat_presence</span><span class="params">(x, L)</span>:</span></span><br><span class="line">    <span class="string">"""int*list[list[int]]-&gt;bool"""</span></span><br><span class="line">    <span class="comment"># l:list[int]</span></span><br><span class="line">    <span class="keyword">for</span> l <span class="keyword">in</span> L:</span><br><span class="line">        <span class="keyword">if</span> presence(x, l):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> mat_presence(<span class="number">5</span>, [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]])</span><br><span class="line"><span class="keyword">assert</span> mat_presence(<span class="number">7</span>, [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]]) == <span class="literal">False</span></span><br><span class="line"><span class="keyword">assert</span> mat_presence(<span class="number">7</span>, CarreMagique)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">verif_elems</span><span class="params">(n, L)</span>:</span></span><br><span class="line">    <span class="string">"""int*list[list[int]]-&gt;bool"""</span></span><br><span class="line">    <span class="comment"># i:int</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n * n + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> mat_presence(i, L):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> verif_elems(<span class="number">3</span>, CarreMagique)</span><br><span class="line"><span class="keyword">assert</span> verif_elems(<span class="number">3</span>, [[<span class="number">2</span>, <span class="number">7</span>, <span class="number">6</span>], [<span class="number">8</span>, <span class="number">5</span>, <span class="number">1</span>], [<span class="number">4</span>, <span class="number">3</span>, <span class="number">8</span>]]) == <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">somme_liste</span><span class="params">(l)</span>:</span></span><br><span class="line">    <span class="string">"""list[int]-&gt;int"""</span></span><br><span class="line">    <span class="comment"># somme:int</span></span><br><span class="line">    somme = <span class="number">0</span></span><br><span class="line">    <span class="comment"># i:int</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">        somme = somme + i</span><br><span class="line">    <span class="keyword">return</span> somme</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> somme_liste([<span class="number">2</span>, <span class="number">7</span>, <span class="number">6</span>]) == <span class="number">15</span></span><br><span class="line"><span class="keyword">assert</span> somme_liste([<span class="number">9</span>, <span class="number">5</span>, <span class="number">1</span>]) == <span class="number">15</span></span><br><span class="line"><span class="keyword">assert</span> somme_liste([<span class="number">4</span>, <span class="number">3</span>, <span class="number">8</span>]) == <span class="number">15</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">verif_lignes</span><span class="params">(L, somme)</span>:</span></span><br><span class="line">    <span class="string">"""list[list[int]]*int-&gt;bool"""</span></span><br><span class="line">    <span class="comment"># l:list[int]</span></span><br><span class="line">    <span class="keyword">for</span> l <span class="keyword">in</span> L:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> somme_liste(l) == somme:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> verif_lignes(CarreMagique, <span class="number">15</span>)</span><br><span class="line"><span class="keyword">assert</span> verif_lignes(CarreMagique, <span class="number">16</span>) == <span class="literal">False</span></span><br><span class="line"><span class="keyword">assert</span> verif_lignes([[<span class="number">2</span>, <span class="number">7</span>, <span class="number">6</span>], [<span class="number">8</span>, <span class="number">5</span>, <span class="number">1</span>], [<span class="number">4</span>, <span class="number">3</span>, <span class="number">8</span>]], <span class="number">15</span>) == <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">colonne</span><span class="params">(n, L)</span>:</span></span><br><span class="line">    <span class="string">"""list[list[int]]*int-&gt;list[int]"""</span></span><br><span class="line">    <span class="comment"># LR:list[[int]</span></span><br><span class="line">    LR = []</span><br><span class="line">    <span class="comment"># i:list[int]</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> L:</span><br><span class="line">        LR.append(i[n])</span><br><span class="line">    <span class="keyword">return</span> LR</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> colonne(<span class="number">0</span>, [[<span class="number">2</span>, <span class="number">7</span>, <span class="number">6</span>],</span><br><span class="line">                   [<span class="number">9</span>, <span class="number">5</span>, <span class="number">1</span>],</span><br><span class="line">                   [<span class="number">4</span>, <span class="number">3</span>, <span class="number">8</span>]]) == [<span class="number">2</span>, <span class="number">9</span>, <span class="number">4</span>]</span><br><span class="line"><span class="keyword">assert</span> colonne(<span class="number">1</span>, [[<span class="number">2</span>, <span class="number">7</span>, <span class="number">6</span>],</span><br><span class="line">                   [<span class="number">9</span>, <span class="number">5</span>, <span class="number">1</span>],</span><br><span class="line">                   [<span class="number">4</span>, <span class="number">3</span>, <span class="number">8</span>]]) == [<span class="number">7</span>, <span class="number">5</span>, <span class="number">3</span>]</span><br><span class="line"><span class="keyword">assert</span> colonne(<span class="number">2</span>, [[<span class="number">2</span>, <span class="number">7</span>, <span class="number">6</span>],</span><br><span class="line">                   [<span class="number">9</span>, <span class="number">5</span>, <span class="number">1</span>],</span><br><span class="line">                   [<span class="number">4</span>, <span class="number">3</span>, <span class="number">8</span>]]) == [<span class="number">6</span>, <span class="number">1</span>, <span class="number">8</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">verif_colonnes</span><span class="params">(L, somme)</span>:</span></span><br><span class="line">    <span class="string">"""list[list[int]]*int-&gt;bool"""</span></span><br><span class="line">    <span class="comment"># i:int</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(L[<span class="number">1</span>])):</span><br><span class="line">        <span class="keyword">if</span> somme_liste(colonne(i, L)) != somme:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> verif_colonnes(CarreMagique, <span class="number">14</span>) == <span class="literal">False</span></span><br><span class="line"><span class="keyword">assert</span> verif_colonnes(CarreMagique, <span class="number">15</span>)</span><br><span class="line"><span class="keyword">assert</span> verif_colonnes([[<span class="number">2</span>, <span class="number">7</span>, <span class="number">6</span>], [<span class="number">8</span>, <span class="number">5</span>, <span class="number">1</span>], [<span class="number">4</span>, <span class="number">3</span>, <span class="number">8</span>]], <span class="number">15</span>) == <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">diagonale_1</span><span class="params">(L)</span>:</span></span><br><span class="line">    <span class="comment"># LR:list[int]</span></span><br><span class="line">    LR = []</span><br><span class="line">    <span class="comment"># l:list[int]</span></span><br><span class="line">    l = []</span><br><span class="line">    <span class="comment"># k:int</span></span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(len(L)):</span><br><span class="line">        l = colonne(k, L)</span><br><span class="line">        LR.append(l[k])</span><br><span class="line">    <span class="keyword">return</span> LR</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">diagonale_2</span><span class="params">(L)</span>:</span></span><br><span class="line">    <span class="comment"># LR:list[int]</span></span><br><span class="line">    LR = []</span><br><span class="line">    <span class="comment"># l:list[int]</span></span><br><span class="line">    l = []</span><br><span class="line">    <span class="comment"># i:int</span></span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(len(L)):</span><br><span class="line">        l = colonne(len(L) - k - <span class="number">1</span>, L)</span><br><span class="line">        LR.append(l[k])</span><br><span class="line">    <span class="keyword">return</span> LR</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> diagonale_1([[<span class="number">2</span>, <span class="number">7</span>, <span class="number">6</span>],</span><br><span class="line">                    [<span class="number">9</span>, <span class="number">5</span>, <span class="number">1</span>],</span><br><span class="line">                    [<span class="number">4</span>, <span class="number">3</span>, <span class="number">8</span>]]) == [<span class="number">2</span>, <span class="number">5</span>, <span class="number">8</span>]</span><br><span class="line"><span class="keyword">assert</span> diagonale_2([[<span class="number">2</span>, <span class="number">7</span>, <span class="number">6</span>],</span><br><span class="line">                    [<span class="number">9</span>, <span class="number">5</span>, <span class="number">1</span>],</span><br><span class="line">                    [<span class="number">4</span>, <span class="number">3</span>, <span class="number">8</span>]]) == [<span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>]</span><br><span class="line"><span class="keyword">assert</span> diagonale_1([[<span class="number">4</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">1</span>],</span><br><span class="line">                    [<span class="number">9</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">12</span>],</span><br><span class="line">                    [<span class="number">5</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">8</span>],</span><br><span class="line">                    [<span class="number">16</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">13</span>]]) == [<span class="number">4</span>, <span class="number">7</span>, <span class="number">10</span>, <span class="number">13</span>]</span><br><span class="line"><span class="keyword">assert</span> diagonale_2([[<span class="number">4</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">1</span>],</span><br><span class="line">                    [<span class="number">9</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">12</span>],</span><br><span class="line">                    [<span class="number">5</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">8</span>],</span><br><span class="line">                    [<span class="number">16</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">13</span>]]) == [<span class="number">1</span>, <span class="number">6</span>, <span class="number">11</span>, <span class="number">16</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">verif_magique</span><span class="params">(L)</span>:</span></span><br><span class="line">    <span class="string">"""list[list[int]]-&gt;bool"""</span></span><br><span class="line">    <span class="comment"># somme:int</span></span><br><span class="line">    somme = somme_liste(L[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> verif_colonnes(L, somme):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> verif_lignes(L, somme):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span> somme != somme_liste(</span><br><span class="line">            diagonale_1(L)) <span class="keyword">or</span> somme != somme_liste(</span><br><span class="line">            diagonale_2(L)):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> verif_magique(CarreMagique)</span><br><span class="line"><span class="keyword">assert</span> verif_magique([[<span class="number">2</span>, <span class="number">7</span>, <span class="number">6</span>], [<span class="number">8</span>, <span class="number">5</span>, <span class="number">1</span>], [<span class="number">4</span>, <span class="number">3</span>, <span class="number">8</span>]]) == <span class="literal">False</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Informatique TP6</title>
      <link href="/2019/11/05/inbox(%E8%BF%87%E6%97%B6%E6%95%88%E6%80%A7%EF%BC%89/Informatique-TP6/"/>
      <url>/2019/11/05/inbox(%E8%BF%87%E6%97%B6%E6%95%88%E6%80%A7%EF%BC%89/Informatique-TP6/</url>
      
        <content type="html"><![CDATA[<h5 id="6-3"><a href="#6-3" class="headerlink" title="6.3"></a>6.3</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 6.3</span></span><br><span class="line"><span class="comment"># Q1</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">somme</span><span class="params">(l)</span>:</span></span><br><span class="line">    <span class="string">""""list[Number]-&gt;Number</span></span><br><span class="line"><span class="string">    retourne la somme des éléments de cette liste, ou 0 si la liste est vide."""</span></span><br><span class="line">    <span class="comment"># somme:Number</span></span><br><span class="line">    somme = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">        somme += i</span><br><span class="line">    <span class="keyword">return</span> somme</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> somme([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]) == <span class="number">15</span></span><br><span class="line"><span class="keyword">assert</span> somme([<span class="number">1</span>, <span class="number">2.5</span>, <span class="number">3.2</span>, <span class="number">4</span>, <span class="number">5</span>]) == <span class="number">15.7</span></span><br><span class="line"><span class="keyword">assert</span> somme([<span class="number">1</span>, <span class="number">2.5</span>, <span class="number">3.5</span>, <span class="number">4</span>, <span class="number">5</span>]) == <span class="number">16.0</span></span><br><span class="line"><span class="keyword">assert</span> somme([]) == <span class="number">0</span></span><br><span class="line"><span class="comment"># Q2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">moyenne</span><span class="params">(l)</span>:</span></span><br><span class="line">    <span class="string">""""list[Number]-&gt;Number</span></span><br><span class="line"><span class="string">    retourne  la moyenne des éléments de cette liste.."""</span></span><br><span class="line">    <span class="keyword">return</span> somme(l) / len(l)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> moyenne([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]) == <span class="number">3.0</span></span><br><span class="line"><span class="keyword">assert</span> moyenne([<span class="number">1</span>, <span class="number">2.5</span>, <span class="number">3.5</span>, <span class="number">4</span>, <span class="number">5</span>]) == <span class="number">3.2</span></span><br><span class="line"><span class="keyword">assert</span> moyenne([<span class="number">5</span>]) == <span class="number">5.0</span></span><br><span class="line"><span class="comment"># Q3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">carres</span><span class="params">(l)</span>:</span></span><br><span class="line">    <span class="string">""""list[Number]-&gt;list[Number]</span></span><br><span class="line"><span class="string">    renvoie la liste des carrés des éléments de L."""</span></span><br><span class="line">    <span class="comment"># L:list[Number]</span></span><br><span class="line">    L = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(l)):</span><br><span class="line">        L.append((l[i])**<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> L</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> carres([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]) == [<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>]</span><br><span class="line"><span class="keyword">assert</span> carres([<span class="number">-5</span>, <span class="number">-1</span>, <span class="number">2</span>]) == [<span class="number">25</span>, <span class="number">1</span>, <span class="number">4</span>]</span><br><span class="line"><span class="keyword">assert</span> carres([]) == []</span><br><span class="line"><span class="keyword">assert</span> carres([<span class="number">10</span>, <span class="number">0.5</span>]) == [<span class="number">100</span>, <span class="number">0.25</span>]</span><br><span class="line"><span class="comment"># Q4</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">variance</span><span class="params">(l)</span>:</span></span><br><span class="line">    <span class="string">"""list[Number]-&gt;Number</span></span><br><span class="line"><span class="string">    renvoie la variance de la liste."""</span></span><br><span class="line">    <span class="keyword">return</span> moyenne(carres(l)) - (moyenne(l))**<span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> variance([<span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>]) == <span class="number">0.0</span></span><br><span class="line"><span class="keyword">assert</span> variance([<span class="number">20</span>, <span class="number">0</span>, <span class="number">20</span>, <span class="number">0</span>]) == <span class="number">100.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Q5</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ecart_type</span><span class="params">(l)</span>:</span></span><br><span class="line">    <span class="string">""""list[Number]-&gt;Number</span></span><br><span class="line"><span class="string">    renvoie l’écart-type de la liste."""</span></span><br><span class="line">    <span class="keyword">return</span> math.sqrt(variance(l))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> ecart_type([<span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>]) == <span class="number">0.0</span></span><br><span class="line"><span class="keyword">assert</span> ecart_type([<span class="number">20</span>, <span class="number">0</span>, <span class="number">20</span>, <span class="number">0</span>]) == <span class="number">10.0</span></span><br><span class="line"><span class="keyword">assert</span> ecart_type([<span class="number">15</span>, <span class="number">15</span>, <span class="number">5</span>, <span class="number">5</span>]) == <span class="number">5.0</span></span><br><span class="line"><span class="keyword">assert</span> ecart_type([<span class="number">12</span>, <span class="number">11</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">11</span>]) == <span class="number">0.7483314773547993</span></span><br></pre></td></tr></table></figure><h5 id="6-6"><a href="#6-6" class="headerlink" title="6.6"></a>6.6</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 6.6</span></span><br><span class="line"><span class="comment"># Q1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">list_mult</span><span class="params">(l, a)</span>:</span></span><br><span class="line">    <span class="string">""""list[int]*int-&gt;list[int]</span></span><br><span class="line"><span class="string">    retourne la liste obtenue en multipliant par k tous les éléments de L"""</span></span><br><span class="line">    <span class="comment"># L:list[int]</span></span><br><span class="line">    L = []</span><br><span class="line">    <span class="comment"># i:int</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">        L.append(i * a)</span><br><span class="line">    <span class="keyword">return</span> L</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> list_mult([<span class="number">3</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">4</span>], <span class="number">2</span>) == [<span class="number">6</span>, <span class="number">10</span>, <span class="number">18</span>, <span class="number">8</span>]</span><br><span class="line"><span class="keyword">assert</span> list_mult([], <span class="number">2</span>) == []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">list_div</span><span class="params">(l, a)</span>:</span></span><br><span class="line">    <span class="string">""""list[int]*int-&gt;list[int]</span></span><br><span class="line"><span class="string">    hyp:len(lsit)&gt;0</span></span><br><span class="line"><span class="string">    retourne la liste obtenue en divisant par k les éléments de L qui sont multiples de k et en supprimant les autres."""</span></span><br><span class="line">    <span class="comment"># L:list[int]</span></span><br><span class="line">    L = []</span><br><span class="line">    <span class="comment"># i:int</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">        <span class="keyword">if</span> i % a == <span class="number">0</span>:</span><br><span class="line">            L.append(i / a)</span><br><span class="line">    <span class="keyword">return</span> L</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> list_div([<span class="number">2</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">24</span>, <span class="number">6</span>], <span class="number">2</span>) == [<span class="number">1</span>, <span class="number">12</span>, <span class="number">3</span>]</span><br><span class="line"><span class="keyword">assert</span> list_div([<span class="number">2</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">24</span>, <span class="number">6</span>], <span class="number">3</span>) == [<span class="number">3</span>, <span class="number">8</span>, <span class="number">2</span>]</span><br><span class="line"><span class="keyword">assert</span> list_div([<span class="number">2</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">24</span>, <span class="number">6</span>], <span class="number">5</span>) == []</span><br><span class="line"><span class="keyword">assert</span> list_div([<span class="number">2</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">-24</span>, <span class="number">6</span>], <span class="number">-3</span>) == [<span class="number">-3</span>, <span class="number">8</span>, <span class="number">-2</span>]</span><br><span class="line"><span class="keyword">assert</span> list_div([], <span class="number">3</span>) == []</span><br></pre></td></tr></table></figure><h5 id="6-7"><a href="#6-7" class="headerlink" title="6.7"></a>6.7</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 6.7</span></span><br><span class="line"><span class="comment"># Q1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decoupage_simple</span><span class="params">(l, a, b)</span>:</span></span><br><span class="line">    <span class="string">""""list[str]*int*int-&gt;list[str]</span></span><br><span class="line"><span class="string">    hyp:0&lt;=a,b,len(l)&gt;=b</span></span><br><span class="line"><span class="string">    retourne la decoupage"""</span></span><br><span class="line">    <span class="comment"># L:list[str]</span></span><br><span class="line">    L = []</span><br><span class="line">    <span class="comment"># i:str</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(a, b):</span><br><span class="line">        L.append(l[i])</span><br><span class="line">    <span class="keyword">return</span> L</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Jeu de tests</span></span><br><span class="line"><span class="comment"># Comptine : list[str]</span></span><br><span class="line">Comptine = [<span class="string">'am'</span>, <span class="string">'stram'</span>, <span class="string">'gram'</span>, <span class="string">'pic'</span>, <span class="string">'pic'</span>, <span class="string">'col'</span>, <span class="string">'gram'</span>]</span><br><span class="line"><span class="keyword">assert</span> decoupage_simple(Comptine, <span class="number">1</span>, <span class="number">3</span>) == Comptine[<span class="number">1</span>:<span class="number">3</span>]</span><br><span class="line"><span class="keyword">assert</span> decoupage_simple(Comptine, <span class="number">3</span>, <span class="number">4</span>) == Comptine[<span class="number">3</span>:<span class="number">4</span>]</span><br><span class="line"><span class="keyword">assert</span> decoupage_simple(Comptine, <span class="number">3</span>, <span class="number">3</span>) == Comptine[<span class="number">3</span>:<span class="number">3</span>]</span><br><span class="line"><span class="keyword">assert</span> decoupage_simple(Comptine, <span class="number">5</span>, <span class="number">3</span>) == Comptine[<span class="number">5</span>:<span class="number">3</span>]</span><br><span class="line"><span class="keyword">assert</span> decoupage_simple(Comptine, <span class="number">0</span>, <span class="number">7</span>) == Comptine[<span class="number">0</span>:<span class="number">7</span>]</span><br><span class="line"><span class="comment"># Q3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decoupage_pas</span><span class="params">(l, i, j, p)</span>:</span></span><br><span class="line">    <span class="string">""""list[str]*int*int*int-&gt;list[str]</span></span><br><span class="line"><span class="string">    hyp:i,j&gt;=0 p&gt;0</span></span><br><span class="line"><span class="string">    retourne le même résultat que L[i:j:p] """</span></span><br><span class="line">    <span class="comment"># L:list[str]</span></span><br><span class="line">    L = []</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(i, j, p):</span><br><span class="line">        L.append(l[k])</span><br><span class="line">    <span class="keyword">return</span> L</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Jeu de tests</span></span><br><span class="line"><span class="keyword">assert</span> decoupage_pas(Comptine, <span class="number">1</span>, <span class="number">5</span>, <span class="number">2</span>) == Comptine[<span class="number">1</span>:<span class="number">5</span>:<span class="number">2</span>]</span><br><span class="line"><span class="keyword">assert</span> decoupage_pas(Comptine, <span class="number">2</span>, <span class="number">6</span>, <span class="number">1</span>) == Comptine[<span class="number">2</span>:<span class="number">6</span>:<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Q4</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decoupage_pas_inv</span><span class="params">(l, i, j, p)</span>:</span></span><br><span class="line">    <span class="string">"""list[str]*int*int*int-&gt;list[str]</span></span><br><span class="line"><span class="string">    hyp:i,j&gt;=0 p&lt;0</span></span><br><span class="line"><span class="string">    retourne retourne le même résultat que L[i:j:p]"""</span></span><br><span class="line">    <span class="comment"># L:list[str]</span></span><br><span class="line">    L = []</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(i, j, p):</span><br><span class="line">        L.append(l[k])</span><br><span class="line">    <span class="keyword">return</span> L</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Jeu de tests</span></span><br><span class="line"><span class="keyword">assert</span> decoupage_pas_inv(Comptine, <span class="number">5</span>, <span class="number">2</span>, <span class="number">-2</span>) == Comptine[<span class="number">5</span>:<span class="number">2</span>:<span class="number">-2</span>]</span><br><span class="line"><span class="keyword">assert</span> decoupage_pas_inv(Comptine, <span class="number">6</span>, <span class="number">0</span>, <span class="number">-1</span>) == Comptine[<span class="number">6</span>:<span class="number">0</span>:<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">assert</span> decoupage_pas_inv(Comptine, <span class="number">6</span>, <span class="number">0</span>, <span class="number">-3</span>) == Comptine[<span class="number">6</span>:<span class="number">0</span>:<span class="number">-3</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Q5</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">normalisation</span><span class="params">(k, l)</span>:</span></span><br><span class="line">    <span class="string">""" int * int -&gt; int</span></span><br><span class="line"><span class="string">    Hypothèse : l &gt;= 0</span></span><br><span class="line"><span class="string">    retourne la normalisation de l'indice k pour</span></span><br><span class="line"><span class="string">    une liste de longueur l."""</span></span><br><span class="line">    <span class="keyword">if</span> k &lt; <span class="number">0</span>:  <span class="comment"># indice négatif</span></span><br><span class="line">        <span class="keyword">if</span> -k &lt;= l:  <span class="comment"># dans l'intervalle [O;l]</span></span><br><span class="line">            <span class="keyword">return</span> l + k</span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># en dehors de l'intervalle [0;l]</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:  <span class="comment"># indice positif</span></span><br><span class="line">        <span class="keyword">if</span> k &gt; l:  <span class="comment"># en dehors de l'intervalle [0;l]</span></span><br><span class="line">            <span class="keyword">return</span> l</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> k  <span class="comment"># déjà normalisé</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># jeu de tests</span></span><br><span class="line"><span class="keyword">assert</span> normalisation(<span class="number">0</span>, <span class="number">6</span>) == <span class="number">0</span>  <span class="comment"># positif dans [0;6]</span></span><br><span class="line"><span class="keyword">assert</span> normalisation(<span class="number">4</span>, <span class="number">6</span>) == <span class="number">4</span>  <span class="comment"># positif dans [0;6]</span></span><br><span class="line"><span class="keyword">assert</span> normalisation(<span class="number">6</span>, <span class="number">6</span>) == <span class="number">6</span>  <span class="comment"># positif dans [0;6]</span></span><br><span class="line"><span class="keyword">assert</span> normalisation(<span class="number">7</span>, <span class="number">6</span>) == <span class="number">6</span>  <span class="comment"># positif hors [0;6]</span></span><br><span class="line"><span class="keyword">assert</span> normalisation(<span class="number">-0</span>, <span class="number">6</span>) == <span class="number">0</span>  <span class="comment"># négatif (cas limite)</span></span><br><span class="line"><span class="keyword">assert</span> normalisation(<span class="number">-1</span>, <span class="number">6</span>) == <span class="number">5</span>  <span class="comment"># négatif dans [0;6]</span></span><br><span class="line"><span class="keyword">assert</span> normalisation(<span class="number">-3</span>, <span class="number">6</span>) == <span class="number">3</span>  <span class="comment"># négatif dans [0;6]</span></span><br><span class="line"><span class="keyword">assert</span> normalisation(<span class="number">-5</span>, <span class="number">6</span>) == <span class="number">1</span>  <span class="comment"># négatif dans [0;6]</span></span><br><span class="line"><span class="keyword">assert</span> normalisation(<span class="number">-6</span>, <span class="number">6</span>) == <span class="number">0</span>  <span class="comment"># négatif dans [0;6]</span></span><br><span class="line"><span class="keyword">assert</span> normalisation(<span class="number">-7</span>, <span class="number">6</span>) == <span class="number">0</span>  <span class="comment"># négatif hors [0;6]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decoupage</span><span class="params">(l, i, j, p=<span class="number">1</span>)</span>:</span></span><br><span class="line">    <span class="string">"""list[str]*int*int*int-&gt;list[str]</span></span><br><span class="line"><span class="string">    hyp:i,j&gt;=0 p!=0</span></span><br><span class="line"><span class="string">    retourne le découpage généralisé"""</span></span><br><span class="line">    <span class="comment"># L:list[str]</span></span><br><span class="line">    L = []</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(i, j, p):</span><br><span class="line">        L.append(l[normalisation(k, len(l))])</span><br><span class="line">    <span class="keyword">return</span> L</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> decoupage(Comptine, <span class="number">1</span>, <span class="number">3</span>) == Comptine[<span class="number">1</span>:<span class="number">3</span>]</span><br><span class="line"><span class="keyword">assert</span> decoupage(Comptine, <span class="number">3</span>, <span class="number">4</span>) == Comptine[<span class="number">3</span>:<span class="number">4</span>]</span><br><span class="line"><span class="keyword">assert</span> decoupage(Comptine, <span class="number">3</span>, <span class="number">3</span>) == Comptine[<span class="number">3</span>:<span class="number">3</span>]</span><br><span class="line"><span class="keyword">assert</span> decoupage(Comptine, <span class="number">5</span>, <span class="number">3</span>) == Comptine[<span class="number">5</span>:<span class="number">3</span>]</span><br><span class="line"><span class="keyword">assert</span> decoupage(Comptine, <span class="number">0</span>, <span class="number">7</span>) == Comptine[<span class="number">0</span>:<span class="number">7</span>]</span><br><span class="line"><span class="keyword">assert</span> decoupage(Comptine, <span class="number">1</span>, <span class="number">5</span>, <span class="number">2</span>) == Comptine[<span class="number">1</span>:<span class="number">5</span>:<span class="number">2</span>]</span><br><span class="line"><span class="keyword">assert</span> decoupage(Comptine, <span class="number">2</span>, <span class="number">6</span>, <span class="number">1</span>) == Comptine[<span class="number">2</span>:<span class="number">6</span>:<span class="number">1</span>]</span><br><span class="line"><span class="keyword">assert</span> decoupage(Comptine, <span class="number">5</span>, <span class="number">2</span>, <span class="number">-2</span>) == Comptine[<span class="number">5</span>:<span class="number">2</span>:<span class="number">-2</span>]</span><br><span class="line"><span class="keyword">assert</span> decoupage(Comptine, <span class="number">6</span>, <span class="number">0</span>, <span class="number">-1</span>) == Comptine[<span class="number">6</span>:<span class="number">0</span>:<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">assert</span> decoupage(Comptine, <span class="number">6</span>, <span class="number">0</span>, <span class="number">-3</span>) == Comptine[<span class="number">6</span>:<span class="number">0</span>:<span class="number">-3</span>]</span><br></pre></td></tr></table></figure><h5 id="6-8"><a href="#6-8" class="headerlink" title="6.8"></a>6.8</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#6.8</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">entrelacement_general</span><span class="params">(l1, l2)</span>:</span></span><br><span class="line">    L = []</span><br><span class="line">    <span class="keyword">if</span> len(l1) &gt;= len(l2):</span><br><span class="line">        m = len(l2)</span><br><span class="line">        l = l1</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        m = len(l1)</span><br><span class="line">        l = l2</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(m):</span><br><span class="line">        L = L + [l1[i]] + [l2[i]]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(m, len(l)):</span><br><span class="line">        L.append(l[i])</span><br><span class="line">    <span class="keyword">return</span> L</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(entrelacement_general([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>], [<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Decoupages</span><span class="params">(l, a, b)</span>:</span></span><br><span class="line">    L = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(a, b):</span><br><span class="line">        L.append(l[i])</span><br><span class="line">    <span class="keyword">return</span> L</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(Decoupages([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>], <span class="number">1</span>, <span class="number">3</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decoupage_pas</span><span class="params">(L, i, j, p)</span>:</span></span><br><span class="line">    l = []</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(i, j, p):</span><br><span class="line">        l.append(L[k])</span><br><span class="line">    <span class="keyword">return</span> l</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Jeu de tests</span></span><br><span class="line">Comptine = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">0</span>]</span><br><span class="line"><span class="keyword">assert</span> decoupage_pas(Comptine, <span class="number">1</span>, <span class="number">5</span>, <span class="number">2</span>) == Comptine[<span class="number">1</span>:<span class="number">5</span>:<span class="number">2</span>]</span><br><span class="line"><span class="keyword">assert</span> decoupage_pas(Comptine, <span class="number">2</span>, <span class="number">6</span>, <span class="number">1</span>) == Comptine[<span class="number">2</span>:<span class="number">6</span>:<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decoupage_pas_inv</span><span class="params">(L, i, j, p)</span>:</span></span><br><span class="line">    l = []</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(i, j, p):</span><br><span class="line">        l.append(L[k])</span><br><span class="line">    <span class="keyword">return</span> l</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Jeu de tests</span></span><br><span class="line"><span class="keyword">assert</span> decoupage_pas_inv(Comptine, <span class="number">5</span>, <span class="number">2</span>, <span class="number">-2</span>) == Comptine[<span class="number">5</span>:<span class="number">2</span>:<span class="number">-2</span>]</span><br><span class="line"><span class="keyword">assert</span> decoupage_pas_inv(Comptine, <span class="number">6</span>, <span class="number">0</span>, <span class="number">-1</span>) == Comptine[<span class="number">6</span>:<span class="number">0</span>:<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">assert</span> decoupage_pas_inv(Comptine, <span class="number">6</span>, <span class="number">0</span>, <span class="number">-3</span>) == Comptine[<span class="number">6</span>:<span class="number">0</span>:<span class="number">-3</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">normalisation</span><span class="params">(k, l)</span>:</span></span><br><span class="line">    <span class="string">""" int * int -&gt; int</span></span><br><span class="line"><span class="string">    Hypothèse : l &gt;= 0</span></span><br><span class="line"><span class="string">    retourne la normalisation de l'indice k pour</span></span><br><span class="line"><span class="string">    une liste de longueur l."""</span></span><br><span class="line">    <span class="keyword">if</span> k &lt;= <span class="number">-1</span>:  <span class="comment"># indice négatif</span></span><br><span class="line">        <span class="keyword">if</span> -k &lt;= l:  <span class="comment"># dans l'intervalle [O;l]</span></span><br><span class="line">            <span class="keyword">return</span> l + k</span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># en dehors de l'intervalle [0;l]</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:  <span class="comment"># indice positif</span></span><br><span class="line">        <span class="keyword">if</span> k &gt; l:  <span class="comment"># en dehors de l'intervalle [0;l]</span></span><br><span class="line">            <span class="keyword">return</span> l</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> k  <span class="comment"># déjà normalisé</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># jeu de tests</span></span><br><span class="line"><span class="keyword">assert</span> normalisation(<span class="number">0</span>, <span class="number">6</span>) == <span class="number">0</span>  <span class="comment"># positif dans [0;6]</span></span><br><span class="line"><span class="keyword">assert</span> normalisation(<span class="number">4</span>, <span class="number">6</span>) == <span class="number">4</span>  <span class="comment"># positif dans [0;6]</span></span><br><span class="line"><span class="keyword">assert</span> normalisation(<span class="number">6</span>, <span class="number">6</span>) == <span class="number">6</span>  <span class="comment"># positif dans [0;6]</span></span><br><span class="line"><span class="keyword">assert</span> normalisation(<span class="number">7</span>, <span class="number">6</span>) == <span class="number">6</span>  <span class="comment"># positif hors [0;6]</span></span><br><span class="line"><span class="keyword">assert</span> normalisation(<span class="number">-0</span>, <span class="number">6</span>) == <span class="number">0</span>  <span class="comment"># négatif (cas limite)</span></span><br><span class="line"><span class="keyword">assert</span> normalisation(<span class="number">-1</span>, <span class="number">6</span>) == <span class="number">5</span>  <span class="comment"># négatif dans [0;6]</span></span><br><span class="line"><span class="keyword">assert</span> normalisation(<span class="number">-3</span>, <span class="number">6</span>) == <span class="number">3</span>  <span class="comment"># négatif dans [0;6]</span></span><br><span class="line"><span class="keyword">assert</span> normalisation(<span class="number">-5</span>, <span class="number">6</span>) == <span class="number">1</span>  <span class="comment"># négatif dans [0;6]</span></span><br><span class="line"><span class="keyword">assert</span> normalisation(<span class="number">-6</span>, <span class="number">6</span>) == <span class="number">0</span>  <span class="comment"># négatif dans [0;6]</span></span><br><span class="line"><span class="keyword">assert</span> normalisation(<span class="number">-7</span>, <span class="number">6</span>) == <span class="number">0</span>  <span class="comment"># négatif hors [0;6]</span></span><br></pre></td></tr></table></figure><h4 id="6-9"><a href="#6-9" class="headerlink" title="6.9"></a>6.9</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#6.9</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">jonction</span><span class="params">(L, c)</span>:</span></span><br><span class="line">    <span class="string">""" list[str] * str -&gt; str</span></span><br><span class="line"><span class="string">    Hypothèse : len(c) = 1</span></span><br><span class="line"><span class="string">    retourne la chaîne composée de la jonction des</span></span><br><span class="line"><span class="string">    chaîne de L séparées deux-à-deux par le</span></span><br><span class="line"><span class="string">    caractère séparateur c."""</span></span><br><span class="line">    <span class="comment">#B:str</span></span><br><span class="line">    B = <span class="string">""</span></span><br><span class="line">    <span class="comment">#i:int</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(L) - <span class="number">1</span>):</span><br><span class="line">        B = B + L[i] + c</span><br><span class="line">    <span class="keyword">return</span> B + L[len(L) - <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(jonction([<span class="string">'un'</span>, <span class="string">'deux'</span>, <span class="string">'trois'</span>, <span class="string">'quatre'</span>], <span class="string">'.'</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">separation</span><span class="params">(s, c)</span>:</span></span><br><span class="line">    <span class="string">""" str * str -&gt; list[str]</span></span><br><span class="line"><span class="string">    Hypothèse : len(c) = 1</span></span><br><span class="line"><span class="string">    retourne la liste de chaînes composées des sous-chaînes</span></span><br><span class="line"><span class="string">    de s séparées par le caractère séparateur c.</span></span><br><span class="line"><span class="string">    Le séparateur c n'est pas présent dans la chaîne résultat."""</span></span><br><span class="line">    <span class="comment">#k1:int</span></span><br><span class="line">    k1 = <span class="number">0</span></span><br><span class="line">    <span class="comment">#k2:int</span></span><br><span class="line">    k2 = <span class="number">0</span></span><br><span class="line">    <span class="comment">#l:list[str]</span></span><br><span class="line">    l = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(s)):</span><br><span class="line">        <span class="keyword">if</span> s[i] == c:</span><br><span class="line">            k2 = i</span><br><span class="line">            l.append(s[k1:k2])</span><br><span class="line">            k1 = i + <span class="number">1</span></span><br><span class="line">    l.append(s[k2 + <span class="number">1</span>:])</span><br><span class="line">    <span class="keyword">return</span> l</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(separation(<span class="string">'un.deux.trois.quatre'</span>, <span class="string">'.'</span>))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> TP </tag>
            
            <tag> Informatique </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Informatique TP5</title>
      <link href="/2019/10/15/inbox(%E8%BF%87%E6%97%B6%E6%95%88%E6%80%A7%EF%BC%89/TD%205/"/>
      <url>/2019/10/15/inbox(%E8%BF%87%E6%97%B6%E6%95%88%E6%80%A7%EF%BC%89/TD%205/</url>
      
        <content type="html"><![CDATA[<h3 id="5-3"><a href="#5-3" class="headerlink" title="5.3"></a>5.3</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">est_voyelle</span><span class="params">(c)</span>:</span></span><br><span class="line">  <span class="string">"""str -&gt; bool</span></span><br><span class="line"><span class="string">  Hypothèse : len(c) == 1</span></span><br><span class="line"><span class="string">  retourne True si et seulement si c est une voyelle</span></span><br><span class="line"><span class="string">  miniscule ou majuscule."""</span></span><br><span class="line">  <span class="keyword">return</span> (c == <span class="string">'a'</span>) <span class="keyword">or</span> (c == <span class="string">'A'</span>) \</span><br><span class="line">      <span class="keyword">or</span> (c == <span class="string">'e'</span>) <span class="keyword">or</span> (c == <span class="string">'E'</span>) \</span><br><span class="line">      <span class="keyword">or</span> (c == <span class="string">'i'</span>) <span class="keyword">or</span> (c == <span class="string">'I'</span>) \</span><br><span class="line">      <span class="keyword">or</span> (c == <span class="string">'o'</span>) <span class="keyword">or</span> (c == <span class="string">'O'</span>) \</span><br><span class="line">      <span class="keyword">or</span> (c == <span class="string">'u'</span>) <span class="keyword">or</span> (c == <span class="string">'U'</span>) \</span><br><span class="line">      <span class="keyword">or</span> (c == <span class="string">'y'</span>) <span class="keyword">or</span> (c == <span class="string">'Y'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">nb_voyelles</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="string">"""str -&gt; int</span></span><br><span class="line"><span class="string">    retourne le numbre du voyelle dans la chaine."""</span></span><br><span class="line">    <span class="comment">#k: int</span></span><br><span class="line">    k=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">        <span class="keyword">if</span> est_voyelle(i):</span><br><span class="line">            k=k+<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> k</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> nb_voyelles(<span class="string">'la maman du petit enfant le console'</span>)==<span class="number">12</span></span><br><span class="line"><span class="keyword">assert</span> nb_voyelles(<span class="string">'mr brrxcx'</span>)==<span class="number">0</span></span><br><span class="line"><span class="keyword">assert</span> nb_voyelles(<span class="string">'ai al o ents'</span>)==<span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sans_voyelle</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="string">"""str -&gt; int</span></span><br><span class="line"><span class="string">    retourne le numbre du voyelle dans la chaine."""</span></span><br><span class="line">    <span class="comment">#k: int</span></span><br><span class="line">    S=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> est_voyelle(i):</span><br><span class="line">            S=S+i</span><br><span class="line">    <span class="keyword">return</span> S</span><br><span class="line"><span class="keyword">assert</span> sans_voyelle(<span class="string">'aeiouy'</span>)==<span class="string">''</span></span><br><span class="line"><span class="keyword">assert</span> sans_voyelle(<span class="string">'la balle au bond rebondit'</span>)==<span class="string">'l bll  bnd rbndt'</span></span><br><span class="line"><span class="keyword">assert</span> sans_voyelle(<span class="string">'mr brrxcx'</span>)==<span class="string">'mr brrxcx'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">nb_voyelles_accents</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="string">"""str-&gt;int</span></span><br><span class="line"><span class="string">    retournele nombre de voyelles (avec accents)presentes dans une chaine passee en parametre"""</span></span><br><span class="line">    <span class="comment">#b:int</span></span><br><span class="line">    b=<span class="number">0</span></span><br><span class="line">    <span class="comment">#c:str</span></span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> s:</span><br><span class="line">        <span class="keyword">if</span> est_voyelle(c)<span class="keyword">or</span>(c==<span class="string">'é'</span>)<span class="keyword">or</span>(c==<span class="string">'è'</span>)<span class="keyword">or</span>(c==<span class="string">'î'</span>)<span class="keyword">or</span>(c==<span class="string">'à'</span>)<span class="keyword">or</span>(c==<span class="string">'ê'</span>)<span class="keyword">or</span>(c==<span class="string">'ù'</span>)<span class="keyword">or</span>(c==<span class="string">'À'</span>)<span class="keyword">or</span>(c==<span class="string">'Â'</span>)<span class="keyword">or</span>(c==<span class="string">'Ê'</span>)<span class="keyword">or</span>(c==<span class="string">'É'</span>)<span class="keyword">or</span>(c==<span class="string">'È'</span>)<span class="keyword">or</span>(c==<span class="string">'Ë'</span>)<span class="keyword">or</span>(c==<span class="string">'ï'</span>)<span class="keyword">or</span>(c==<span class="string">'Ï'</span>)<span class="keyword">or</span>(c==<span class="string">'Î'</span>)<span class="keyword">or</span>(c==<span class="string">'ô'</span>)<span class="keyword">or</span>(c==<span class="string">'ö'</span>)<span class="keyword">or</span>(c==<span class="string">'Ô'</span>)<span class="keyword">or</span>(c==<span class="string">'Ö'</span>)<span class="keyword">or</span>(c==<span class="string">'û'</span>)<span class="keyword">or</span>(c==<span class="string">'ü'</span>)<span class="keyword">or</span>(c==<span class="string">'Ù'</span>)<span class="keyword">or</span>(c==<span class="string">'Û'</span>):</span><br><span class="line">            b=b+<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> b</span><br><span class="line"><span class="keyword">assert</span> nb_voyelles_accents(<span class="string">'la maman de bébé le réconforte'</span>)==<span class="number">11</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span>  <span class="title">mot_mystere</span><span class="params">(s)</span>:</span></span><br><span class="line">    S=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">        <span class="keyword">if</span> est_voyelle(i):</span><br><span class="line">            S=S+<span class="string">"_"</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            S=S+i</span><br><span class="line">    <span class="keyword">return</span> S</span><br><span class="line"><span class="keyword">assert</span> mot_mystere(<span class="string">'aeiouy'</span>)==<span class="string">'______'</span></span><br><span class="line"><span class="keyword">assert</span> mot_mystere(<span class="string">'la balle au bond rebondit bien'</span>)==<span class="string">'l_ b_ll_ __ b_nd r_b_nd_t b__n'</span></span><br><span class="line"><span class="keyword">assert</span> mot_mystere(<span class="string">'mr brrxcx'</span>)==<span class="string">'mr brrxcx'</span></span><br></pre></td></tr></table></figure><h3 id="5-4"><a href="#5-4" class="headerlink" title="5.4"></a>5.4</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">est_palindrome</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="string">"""str -&gt; bool</span></span><br><span class="line"><span class="string">    retourne True si et seulement si s est une palindrome."""</span></span><br><span class="line">    <span class="keyword">if</span> len(s) % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    a = len(s) // <span class="number">2</span></span><br><span class="line">    k = s[:a + <span class="number">1</span>]</span><br><span class="line">    <span class="keyword">return</span> k[::<span class="number">-1</span>] == s[a::]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(est_palindrome(<span class="string">'amanaplanacanalpanama'</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">miroir</span><span class="params">(c)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> c+c[::<span class="number">-1</span>]</span><br><span class="line">print(miroir(<span class="string">"abc"</span>))</span><br></pre></td></tr></table></figure><h3 id="5-6"><a href="#5-6" class="headerlink" title="5.6"></a>5.6</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">base_comp</span><span class="params">(c)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> c==<span class="string">"A"</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"T"</span></span><br><span class="line">    <span class="keyword">elif</span> c==<span class="string">"T"</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"A"</span></span><br><span class="line">    <span class="keyword">elif</span> c==<span class="string">"G"</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"C"</span></span><br><span class="line">    <span class="keyword">elif</span> c==<span class="string">"C"</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"G"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> base_comp(<span class="string">'A'</span>)==<span class="string">"T"</span></span><br><span class="line"><span class="keyword">assert</span> base_comp(<span class="string">'G'</span>)==<span class="string">"C"</span></span><br><span class="line"><span class="keyword">assert</span> base_comp(<span class="string">'T'</span>)==<span class="string">"A"</span></span><br><span class="line"><span class="keyword">assert</span> base_comp(<span class="string">'C'</span>)==<span class="string">"G"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">brin_comp</span><span class="params">(s)</span>:</span></span><br><span class="line">    S=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(s)):</span><br><span class="line">        S=S+base_comp(s[i])</span><br><span class="line">    <span class="keyword">return</span> S[::<span class="number">-1</span>]</span><br><span class="line">print(brin_comp(<span class="string">'ATTGCCGTATGTATTGCGCT'</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_comp</span><span class="params">(s1, s2)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> brin_comp(s1)==s2</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> test_comp(<span class="string">''</span>,<span class="string">''</span>)==<span class="literal">True</span></span><br><span class="line"><span class="keyword">assert</span> test_comp(<span class="string">''</span>, <span class="string">'ATCG'</span>)==<span class="literal">False</span></span><br><span class="line"><span class="keyword">assert</span> test_comp(<span class="string">'ATCG'</span>, <span class="string">''</span>)==<span class="literal">False</span></span><br><span class="line"><span class="keyword">assert</span> test_comp(<span class="string">'ATCG'</span>, <span class="string">'CGAT'</span>)==<span class="literal">True</span></span><br><span class="line"><span class="keyword">assert</span> test_comp(<span class="string">'ATCG'</span>, <span class="string">'TAAG'</span>)==<span class="literal">False</span></span><br><span class="line"><span class="keyword">assert</span> test_comp(<span class="string">'ATTGCCGTATGTATTGCGCT'</span>, <span class="string">'AGCGCAATACATACGGCAAT'</span>)==<span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_sous_sequence</span><span class="params">(s1,s2)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> s1 <span class="keyword">in</span> s2</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">recherche_sous_sequence</span><span class="params">(s1,s2)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> s2.find(s1) <span class="keyword">if</span> (s2.find(s1))&gt;=<span class="number">0</span> <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">print(recherche_sous_sequence(<span class="string">'ATCG'</span>,<span class="string">'ATCG'</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">suppression_debut</span><span class="params">(c,s)</span>:</span></span><br><span class="line">    h=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(s)):</span><br><span class="line">        <span class="keyword">if</span> s[i] <span class="keyword">not</span> <span class="keyword">in</span> c:</span><br><span class="line">            h=h+s[i]</span><br><span class="line">    <span class="keyword">return</span> h</span><br><span class="line">print(suppression_debut(<span class="string">'p'</span>, <span class="string">'le papa noel'</span>))</span><br><span class="line">print(suppression_debut(<span class="string">'a'</span>, <span class="string">'bbbbb'</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">suppression_derniere</span><span class="params">(c,s)</span>:</span></span><br><span class="line">    s=s[::<span class="number">-1</span>]</span><br><span class="line">    b=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(s)):</span><br><span class="line">        <span class="keyword">if</span> s[i] <span class="keyword">not</span> <span class="keyword">in</span> c:</span><br><span class="line">            b=b+s[i]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            b=s[:i]+s[i+<span class="number">1</span>:]</span><br><span class="line">            <span class="keyword">return</span> b[::<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> s[::<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">print(suppression_derniere(<span class="string">'p'</span>, <span class="string">'le papa noel'</span>))</span><br><span class="line">print(suppression_derniere(<span class="string">'a'</span>,<span class="string">''</span>))</span><br><span class="line">print(suppression_derniere(<span class="string">'a'</span>, <span class="string">'aaaaa'</span>))</span><br><span class="line">print(suppression_derniere(<span class="string">'a'</span>, <span class="string">'bbbbb'</span>))</span><br></pre></td></tr></table></figure><h3 id="5-8"><a href="#5-8" class="headerlink" title="5.8"></a>5.8</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">est_chiffre</span><span class="params">(c)</span>:</span></span><br><span class="line">    <span class="string">"""str -&gt; bool</span></span><br><span class="line"><span class="string">    Hypothèse : len(c) == 1</span></span><br><span class="line"><span class="string">    retourne True si et seulement si c est un chiffre."""</span></span><br><span class="line">    <span class="keyword">return</span> (<span class="string">'0'</span> &lt;= c) <span class="keyword">and</span> (c &lt;= <span class="string">'9'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decompression</span><span class="params">(c)</span>:</span></span><br><span class="line">    <span class="string">"""str-&gt;str</span></span><br><span class="line"><span class="string">    hyp:les chaînes à compresser ne contiennent pas déjà des characters</span></span><br><span class="line"><span class="string">    retourne le string de decompression."""</span></span><br><span class="line">    B=<span class="string">""</span></span><br><span class="line">    i=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i &lt;= len(c)<span class="number">-1</span>:</span><br><span class="line">        <span class="keyword">if</span> est_chiffre(c[i]):</span><br><span class="line">            B=B+(int(c[i]))*(c[i+<span class="number">1</span>])</span><br><span class="line">            i=i+<span class="number">2</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            B=B+c[i]</span><br><span class="line">            i=i+<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> B</span><br><span class="line">b=<span class="string">"3a4c3p4v"</span></span><br><span class="line">print(decompression(b))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">compression</span><span class="params">(c)</span>:</span></span><br><span class="line">    <span class="string">"""str-&gt;str</span></span><br><span class="line"><span class="string">    hyp:les chaînes à compresser ne contiennent pas déjà des chiffres.</span></span><br><span class="line"><span class="string">    retourne le string si la chaîne contient (strictement) plus d’une occurrence successive du même caractère alors on remplace les n occurrences de ce caractère par le nombre n suivi du caractère"""</span></span><br><span class="line">    k=<span class="number">1</span></span><br><span class="line">    c=c+<span class="string">"@"</span></span><br><span class="line">    B=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(c)<span class="number">-1</span>):</span><br><span class="line">        <span class="keyword">if</span> c[i+<span class="number">1</span>]==c[i]:</span><br><span class="line">            k=k+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> k&gt;=<span class="number">2</span>:</span><br><span class="line">                B=B+str(k)+c[i]</span><br><span class="line">                k=<span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                B=B+c[i]</span><br><span class="line">    <span class="keyword">return</span>(B)</span><br><span class="line">a=<span class="string">"wtyefffffffvvvvvvvp"</span></span><br><span class="line">print(compression(a))</span><br><span class="line"></span><br><span class="line">print(compression(decompression(b))==b)</span><br></pre></td></tr></table></figure><h3 id="5-9"><a href="#5-9" class="headerlink" title="5.9"></a>5.9</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">moins_lettre</span><span class="params">(c,a)</span>:</span></span><br><span class="line">    <span class="string">"""str*str-&gt;bool</span></span><br><span class="line"><span class="string">    returne True si and seulement si c contient au moins une fois a."""</span></span><br><span class="line">    <span class="keyword">return</span> a <span class="keyword">in</span> c</span><br><span class="line">print(moins_lettre(<span class="string">'123456712'</span>,<span class="string">'12'</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">anagramme</span><span class="params">(m1,m2)</span>:</span></span><br><span class="line">    <span class="string">"""str*str-&gt;bool</span></span><br><span class="line"><span class="string">    returne True si and seulement si m1 et m2 sont anagrammes"""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> m1:</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> m2:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">print(anagramme(<span class="string">"alberteinstein"</span>, <span class="string">"alberteinstein"</span>))</span><br><span class="line">print(anagramme(<span class="string">"alberteinstein"</span>, <span class="string">"toutestrelatif"</span>))</span><br></pre></td></tr></table></figure><h3 id="page"><a href="#page" class="headerlink" title="page"></a>page</h3><p><a href="https://moodle-sciences.upmc.fr/moodle-2019/login/index.php" target="_blank" rel="noopener">MOODLE</a><br><a href="http://www.licence.info.upmc.fr/lmd/licence/2019/ue/LU1IN001-2019oct/cgi-bin/remettreDevoir2019.cgi" target="_blank" rel="noopener">Soumission des TME</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> TP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20190619</title>
      <link href="/2019/06/19/20190619/"/>
      <url>/2019/06/19/20190619/</url>
      
        <content type="html"><![CDATA[<p>fonction impaire </p><p>symétrique</p><p>Il est clair que :</p><p>On remarque par ailleurs que : </p><p>En conséquence,</p><p>g est une fonction dérivable sur ]0, +∞[, et on a :<br>En conséquence, g est une fonction strictement croissante sur ]0, +∞[. </p><p>On trace les fonction g et f </p><p>h est dérivable sur ]0, +∞[, et on a h0(t) = -1／t&lt; 0 sur cet intervalle. </p><p>h est donc une fonction strictement décroissante sur ]0, +∞[. </p><p>Or il est clair que h(e) = 0. </p><p>En conséquence, h est positive sur ]0, e[, nulle en e et négative sur ]e, +∞[ </p><p>Par définition de H, on a donc : </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Presentation|troll</title>
      <link href="/2019/06/18/troll/"/>
      <url>/2019/06/18/troll/</url>
      
        <content type="html"><![CDATA[<h1 id="Troll"><a href="#Troll" class="headerlink" title="Troll"></a>Troll</h1><p>On doit être plus prudent sur internet, car la personnalité de l’Internet a changé. C’était autrefois un geek avec de nobles idéaux sur la libre circulation de l’information. Maintenant, si vous avez besoin d’aide pour améliorer votre vitesse de téléchargement, le Web peut vous aider avec les détails techniques, mais si vous lui dites que vous souffrez de dépression, il essaiera de vous pousser à vous suicider.</p><p>Les psychologues qualifient ce phénomène d ‘“effet de relâchement du réseau” et soulignent que celui-ci est caractérisé par </p><ul><li>l’anonymat,  c’est à dire sur internet on ne connaît pas leur identité.</li><li>la dissimulation, c’est à dire on peut créer un rôle fictif sur internet et se cacher.</li><li>la non autorité </li><li>et le contre-réaction à retard. </li></ul><p>Ces facteurs détruisent les normes établies par la société humaine au cours de milliers d’années. Le phénomène apparaît dans tous les aspects de la vie quotidienne à partir de téléphones portable.</p><p>Les personnes qui apprécient cette liberté en ligne sont appelées trolls, le terme, qui désignait hier des farceurs(c’est à dire Personne qui aime faire des plaisanteries) remettant en cause l’ordre social par jeu ou qui poste des messages tendancieux sur dans les réseau social afin d’alimenter les dispute agressive, est devenu des monstre qui se cachent dans l’obscurité et menacent les gens.</p><p>ils seront auto-catégoriser et ils dit qu’il le font pour le rire. Ce que les trolls font pour rire, va des plaisanteries ,au harcèlement (les activités continues pour épuiser ou de tourmenter la victime) ,aux menaces violentes. Il y a aussi doxxing ,(c’est à dire , publier des information privé, telles que des numéros de sécurité sociale et des comptes bancaires) </p><p>Whitney Phillips, professeur de littérature à l’Université Mercer a déclaré «Les trolls sont décrits comme étant contraire à la façon dont les gens normaux se parlent. Et cela est loin de la vérité “, “La grande majorité des trolls sont des gens normaux, et ce qu’ils font semble amusant pour le moment, mais cela a un impact potentiel énorme ensuite. Vous voudrez peut-être dire qu’il s’agit d’un groupe de méchants, mais en réalité, les méchants viennent de nous.”</p><p>Dans cette nouvelle guerre culturelle, la bataille ne se limite pas à l’homosexualité,l’apparence , au rap, à la drogue ou à la façon de saluer les gens à Noël. Il est étendu à tout et n’importe quoi: jeux vidéo, petites annonces de vêtements, même en train de refaire une comédie des années 1980.</p><p>Lorsque des trolls en ligne occupent le site, elles commencent à repousser des groupe vulnérable (c’est à dire qui peut facilement être attaqué moralement ) comme les femmes, des minorités, des religions et des homosexuels.</p><p>Les jeunes générations de ces groupes ont perçu la cyber-violence comme un élément ordinaire de la vie en ligne et donc se sont protégés.</p><p>“Il ne s’agit pas de la cible. Si les troll sont bloqués par un victime , ils disent:” C’est bon”et passent à la personne suivante”Les trolls ne détestent pas les gens autant qu’ils aiment le jeu de détester les gens.</p><p>La culture des troll peut également affecter la façon dont les gens ordinaires s’entendent en réalité . Une étude à paraître de l’Université de Californie a montré que lorsque les gens étaient exposés à des informations  de bonnes actions sur internet , ils étaient 10% plus possible de faire de bonnes actions ce jour-là. . Mais l’inverse se produit probablement aussi. </p><p>Susan Benesch, professeure associée au centre Internet and Society d‘Harvard., a déclaré qu’On peut voir que les normes de discours continue changer en ligne, et elles sont probablement liées aux normes de comportement””S’il est plus en plus acceptable d’appeler un groupe un groupe inférieur et  les parasites, alors ces personnes peuvent penser qu’il n’y a aucun problème à leur faire du mal. “</p><p>Certains diront que s’ils ne les supportent plus , ils peuvent éteignent l’ordinateur. mais ce-ci prive d’autres personnes de leurs besoins d’expression personnelle et va au contraire de l’intention initiale des valeurs d’Internet.   </p><p>Sam Altman, un investisseur en capital-risque a déclaré，”C’est la même chose que les gens disent de mauvaises choses à propos des personnalités publiques. Maintenant, sur Internet, tout le monde est une personnalité publique, mais le problème est que tout le monde ne sait pas comment  les faire.”</p><p>Maintenant il existe un moyen de lutter contre la cyber-violence sur les réseaux sociaux ,qui consiste à diffuser beaucoup d’informations de bonne volonté sur la page d’accueil de la victime, ce qui réduit l’influence des propos insultants. En 2016, May a créé Heartmob, une application qui permet aux gens de signaler les activités de trolls et de recevoir des messages de soutien d’autres personnes. Mais sa fonction est limité.</p><p>Pour moi tout le monde sont connectées par un dialogue basé sur des informations communes. ils ont seulement leur propre jugement et leur esprit de réflexion et peuvent interagir efficacement avec les autres.</p><p>Chacun de nous peut participer au dialogue par les likes ,les commentaires et les transmission, qui ont formé un groupe public sur Internet. Quand de plus en plus de “trolls” apparaissent,Il faut absolument que nous réfléchissions les question suivant.</p><p>Est-ce qu’ils sont simplement classés en “trolls” ou  on peut étudier les informations qu’ils partagent, l’identité commune, puis essayer Comprendre leurs interactions? </p><p>faut-il ignorer ou critiquer ces «trolls» ou essayer d’ouvrir un dialogue et de s’influencer mutuellement même si le plupart de l’effort est nul?</p><p>Je pense que nous pouvons obtenir un meilleur groupe public en améliorant la qualité de l’information et en promouvant la qualité du dialogue.</p><p>Mais d’abord on doit être plus prudent sur internet , ne deviens pas les trolls et les victimes.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>les idoles souterrain</title>
      <link href="/2019/06/12/les%20idoles%20souterrain/"/>
      <url>/2019/06/12/les%20idoles%20souterrain/</url>
      
        <content type="html"><![CDATA[<h3 id="introduction"><a href="#introduction" class="headerlink" title="introduction"></a>introduction</h3><p>Bonjour tout le monde ，mon sujet d’aujourd’hui est “les idoles souterrain”</p><p>je pense que vous avez déjà votre définition des idoles , mais cet mot qui est en connexion avec “souterrain”est un peu différents et puis vous peut-être avez ignoré leur dimension symbolique.</p><p>Alors je voudrais l’exprimer dans quatre dimension.</p><h4 id="premierement-L‘idole-japonais"><a href="#premierement-L‘idole-japonais" class="headerlink" title="premièrement L‘idole japonais"></a>premièrement L‘idole japonais</h4><p>les idole souterrain est originaire de japon.donc c’est inévitable de mentionner les idoles Japonaise.</p><p>Les idoles sont le produit culturel et organisé selon un système culturel.Des modèles de développement social, politique, économique et historique spéciaux du Japon décide que les femmes japonaises se trouvaient dans un contexte social et culturel unique, différent de celui de l’Europe, des États-Unis et des d’autre pays en Asie.</p><p>Aussi en Asie ,la Corée du Sud dont  la mesure culturel spéciale   influence la tendance du monde en raison du recréation de l’esthétique “Cyborg”.</p><p>le “Cyborg” fait converger les individuels différents en un tout cohérent pour représenter en utilisant les technique du danse qui continue le processus de diviser, construire et se copier pour le former un ensemble qui a une caractère du “modularisation”. Par exemple le chanson Blood Sweat &amp; Tears du BTS , le chanson Gee du Girls’ Generation.</p><p>En même temps, sa signification esthétique n’est pas une répétition simple, mais elle possède également une certaine divisibilité individuelle et une reconnaissance dans une image visuelle nette, symétrique et harmonieuse. Donc en général les idoles sud-Coréen doit être équipé tout les capacités complètement.</p><p>Par rapport au idole parfait  sud-coréenne , les idoles japonais a la caractère d’être cultivé par les fans , elles sont toujours à l’image ,de douceur avec enfantillage ,ravissant ,innocent , doux mais faible , d’inexpérience pour plaire au connaissance  sexuelle d’aliénation (c’est à dire le connaissance féminin qui a perdu le sens de l’origine). les détails des images des idoles émane des image fictif du otaku culturel (vous pouvez considérer le otaku culturel au sujet de l’anime et des jeux vidéo) ,les fans de l’anime sont souvent les fans des idoles japonais , c’est pourquoi les fans transmettre leur imagine des figure fictif au ses regard sur les idoles et il deviens le standard des idoles féminins.</p><p>En général , le seuil et demande social des idoles japonais est plus petite que les idoles sud-Coréen ,ce qui permet réduire le prix du choix. Les activités des idoles japonais est approchable à la vie et plus comme un stage ou un expérience qui peut satisfaire une petite désire ou même une campe d’été.</p><p>Une idoles peut être également une politicienne , un professeur ou un chercheur dans le futur ou en même moment qui fait l’activité des idoles comme un intérêt. elles peux faire les activité des idoles jusqu’à plus de 50 ans.</p><p>Mais dans la grande majorité du temps , c’est le ménage qui termine la carrière des idoles.</p><h4 id="souterrain"><a href="#souterrain" class="headerlink" title="souterrain"></a>souterrain</h4><p>Souterrain en général c’est à dire les régions dans lesquels les idoles souterrain faire les activité des idoles , par exemple le sous-sol des supermarché,des bâtiment abandonné.Par rapport aux idoles normal, elles ne sont pas soutenu par les cabinet bien connu qui ont le capital suffisant et donc ne peut pas se promettre de louer l’endroit normal pour le concert , n’ont pas le canal et le renom pour obtenir la chance de la couverture médiatique.elles seulement donne les représentation et Publient des chansons sur la plateforme Web , comme youtube ,niconico ,bilibili,et cetera.</p><p>Quelquefois l’état de souterrain est non plus qu’un début de carrière brillant ou justement une expression des sentiment d’adolescent , rébellion au la vie tous les jours sans une grande influence.</p><p>Mais à l’égard du plupart des filles qui prennent du choix de devenir une idole souterrain , c‘est un battre àu destin déjà connaissant le résultat. elles étaient éliminé dans le premier rond des idoles et n’avaient  pas d’autre choix.</p><p>Le système des idoles souterrain n’est pas un système indépendant qui est très loin de le vue du public.Il y ont quelque filles qui explose par exemple <strong>Hashimoto kanna</strong> (qui est une actrice dans le film GINTAMA) (akb48) mais le possibilités est à peine perceptible.</p><p>vous peut-être savez bien les rappeur souterrain dans le culturel hip-pop.mais ses sens ne sont pas pareil.</p><p>A l’ égard au rappeur souterrain en américain , souterrain ,c’est ce qui représente une sentiment ,c’est un façon d’approcher le sol qui  cultive le rap.</p><p>Alors les idoles souterrain est à la base de la pyramide de cette industrie. </p><p>Leo Lowenthal divise les idoles aux deux type —— les idoles de production qui incite les inspirations et les émotion positive et les idoles de consomption qui incite le désire de consomption, au réalité , les idoles peut être non seulement les idoles du consomption mais aussi les idoles de production . mais bien sur le consomption est plus important. On utilise divises de moyen pour venter les CDs sans détour ，par exemple il vous offrit une chance de toucher une partie du corps si vous achetez un CD。</p><p>Mais dans l’angle positive dans la terre ce n’est pas obligatoire d‘accepter le jugement du public.</p><p>LIUCIXIN L’auteur chinois pense qu‘il est certain que les facteur de science fiction connu a été testé par le marché et ne peut pas être la source d’inspiration.</p><p>Pour moi C’est à dire les producteurs de médias public n’essaient plus de diriger le public avec une conscience culturelle dominante constante , mais fournissaient simplement du matériel médiatique répondant à diverses orientations du public, Suivez ensuite l’interprétation du public et le rythme généré dans le processus de re-création.</p><p>Les idoles peuvent aussi un support des concept des producteur comme les lèvres du science-fiction.Donc les nouveaux concept des idoles peut être testé dans la terre avec le très petit prix par rapport aux idoles normal. </p><p>Il y a les groupes des idoles souterrain qui ont le concept très intéressant. </p><p>Par exemple</p><ul><li>……</li></ul><p>la groupe qui appelle les six points ,tous les membres remplacent le nom par un seul point, ne révélant pas le visage ,le race et les information privé. La seule différence entre eux est le son et le caractère. elles portent des masuqes dans les représentations.elles joue le bruit comme la chanson.</p><ul><li>Bis</li></ul><p>BiS (Brand new Idol Society)  est un groupe féminin de J-pop cultivant une image non conventionnelle, dans le premier single “My Ixxx”, les membres sont nus dans le video, sauvages dans la forêt, faites savoir à tous qu’elle Venent à la communauté des idoles pour un grand combat. Si vous souhaitez regarder ce MV sur YouTube, le site Web vous avertira que la vidéo contient un contenu inapproprié.</p><p>Si Le premier vous permet de jeter un coup d’œil à l’externalité d’idol,leur troisième single primal. vous permet d’aller directement à l’intérieur d’idol. Le camera suivre le gastroscope pour scruter la bouche des filles, BiS détruit toujours les limites de l’idole avec une attitude absolu.</p><p>Mais dans le dernier single “FiNAL DANCE”, BiS a choisi d’embrasser l’arrière-plan des idoles normal qu’ils ont toujours voulu déchirer, et a pris un film virtuel de type AKB48.Beaucoup pensent que la rébellion consiste à déprécier le courant dominant et à créer une force, mais pour moi une telle rébellion n’est qu’un apparence , en fait, s’il n’y a pas de médiocrité, La “couleur de fond” ,toute couleur que vous versez n’a pas de sens.</p><h4 id="les-audience"><a href="#les-audience" class="headerlink" title="les audience"></a>les audience</h4><p>vous peut-être avoir le question , les idole normal est suffisante pour le public et c’est qui peut être son supporteur?</p><p>Le plupart des fans est aussi au bas de la pyramide . Ils n’ont pas d’autre espère que ces revenu minimaux garantis et n’ont pas été répondu au besoin émotionnels spirituels . Les tickets et les CDs des idoles normal est trop chère pour les gens.</p><p>Mais le culturel des idoles souterrain est aussi spécial ,intéressent et attire beaucoup des fan.Le distance entre les idoles souterrain et les audience arrive un équilibre subtil ,ni les filles d’à côté , ni les idoles normal.</p><p>par exemple</p><ul><li>elles peuvent jeter leur-même aux audience à l’apogée du représentation.</li><li>ses chanson et sa dance a une connotation sexuelle plus évident.(une connotation c’est à dire faire comprendre par signe)</li><li>à la fin du représentation , les audience doivent voter le meilleur idole d’aujourd’hui .ce qui connecte le destin des idoles avec les audience plus visuellement que les idoles normal.parce que les idoles ayant plus de vote ont plus de chance de donner les représentation, et les idoles toujours ayant moins de vote probablement doit terminer son carrière.</li></ul><h4 id="la-reve"><a href="#la-reve" class="headerlink" title="la rêvé"></a>la rêvé</h4><p>l’idoles vend le rêve et est le profession du rêve comme l’artiste c’est apparemment loin du réalité , mais contraire à d’autre rêve,le besoin de représenter en scène et être aimé par des autres n’est pas respecté par beaucoup des gens.</p><p>il faut trouve une équilibre entre le réalité et le rêve mais quelquefois cette activité détruit la nature du rêve.</p><p>Quand on essaye de trouver des raisons de la tendance de devenir une idole, Certaines personnes pensent que cette tendance est incité par la bêtise , la déraison fanatique et la vanité . elles ne sont pas responsable à leur futur. </p><p>Mais ce qui forme les besoins de la fille et le garçon , c’est un environnement humaniste spécial qui limite sa vision et son choix. On peut également dire que le fanatisme des idoles  est un produit de la société.</p><p>（Le soi-disant idéal est à l’origine contrôlé par la passion plutôt que par la rationalité: la proximité de la marge des rêves signifie la réalisation de soi, et la réalisation de soi doit être considérée comme la source de Sentiment d’accomplissement la plus puissante. </p><p>En même temps le désir de réaliser la rêve fait parfois la personne fou, ce qui aussi passait à une sombre chaîne industrielle qui appelle “les idole de la nuit” Mais ce sera trop longue si je discute ici.）</p><p>je vais être heureux si vous avez intérêt aux idoles souterrain après mon représentation.</p><p>C’est tout merci.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Science-Exact-Exercise-2</title>
      <link href="/2019/06/11/Science-Exact-Exercise-2/"/>
      <url>/2019/06/11/Science-Exact-Exercise-2/</url>
      
        <content type="html"><![CDATA[<h3 id="la-graph"><a href="#la-graph" class="headerlink" title="la graph"></a>la graph</h3><table><thead><tr><th>caractéristique</th><th style="text-align:left">soleil</th><th>mercure</th><th>vénus</th><th>terre</th><th style="text-align:left">Jupiter</th></tr></thead><tbody><tr><td>diamètre en km</td><td style="text-align:left">1400000</td><td></td><td>14100</td><td>128000</td><td style="text-align:left">1420000</td></tr><tr><td>période de rotation</td><td style="text-align:left">23j</td><td></td><td>243j</td><td>23h56’4’’</td><td style="text-align:left">9h50’</td></tr><tr><td>période de révolution</td><td style="text-align:left"></td><td></td><td>224.7j</td><td>365.26j</td><td style="text-align:left">11.86ans</td></tr><tr><td>temperature à la surface</td><td style="text-align:left">6000℃</td><td>427℃</td><td>460℃</td><td>15℃</td><td style="text-align:left">-140℃</td></tr><tr><td>l’état de physique</td><td style="text-align:left">gaz</td><td></td><td>solide</td><td>solide</td><td style="text-align:left">liquide</td></tr><tr><td>les composants d’atmosphère</td><td style="text-align:left">hydrogénée/hélium</td><td></td><td>gaz carbonique</td><td>air</td><td style="text-align:left">hydrogénée/hélium</td></tr></tbody></table><table><thead><tr><th>matériel</th><th></th><th></th></tr></thead><tbody><tr><td>gaz</td><td>air/20℃</td><td>343m/s</td></tr><tr><td>solide</td><td>or</td><td>3240m/s</td></tr><tr><td></td><td>aluminium</td><td>6420m/s</td></tr><tr><td>liquide</td><td>eau</td><td>1480m/s</td></tr><tr><td></td><td>mer</td><td>1531m/s</td></tr></tbody></table><p>faible/basse</p><p>la vitesse de lumiere dans le gaz est plus faible que celui dans la solide</p><h3 id="la-comparaison"><a href="#la-comparaison" class="headerlink" title="la comparaison"></a>la comparaison</h3><ol><li>le diamètre de le Jupiter est (le Jupier a un diamètre)10 fois plus petite que celui du soleil.</li><li>le Jupier ,dont le diamètre est10 fois plus petite que celui du soleil, a une periode de rolation de moins de 10h pour 23j pour le soleil. </li><li>la température à la surface du Jupiter est -140 ℃ alors qu’elle atteint 6000℃ à la surface du soleil.</li><li>Jupiter a un état physique de liquide pour un état du gaz pour le soleil.</li></ol><h4 id="Le-fois"><a href="#Le-fois" class="headerlink" title="Le fois"></a>Le fois</h4><table><thead><tr><th>expression</th><th></th><th>exemple</th></tr></thead><tbody><tr><td>une fois sur deux</td><td>相邻的两次为一组</td><td>les valeurs de x1 et x2 changent chacune une fois sur deux.（相邻两次记为一组，每组中x1，x2都发生变化）</td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Science Exact </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Science Exact </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>190522 note</title>
      <link href="/2019/05/22/190522-note/"/>
      <url>/2019/05/22/190522-note/</url>
      
        <content type="html"><![CDATA[<h3 id="grammaire"><a href="#grammaire" class="headerlink" title="grammaire"></a>grammaire</h3><h4 id="les-pronoms-relatif"><a href="#les-pronoms-relatif" class="headerlink" title="les pronoms relatif"></a>les pronoms relatif</h4><h4 id="Comparaison"><a href="#Comparaison" class="headerlink" title="Comparaison"></a>Comparaison</h4><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>bon,e</td><td>meilleur</td><td>le meilleur</td></tr><tr><td>bien</td><td>mieux</td><td>le mieux</td></tr><tr><td>mauvais</td><td>pire/pis</td><td>le pire</td></tr></tbody></table><h4 id="人称代词-前置代词"><a href="#人称代词-前置代词" class="headerlink" title="人称代词/前置代词"></a>人称代词/前置代词</h4><h4 id="le-passif"><a href="#le-passif" class="headerlink" title="le passif"></a>le passif</h4><h4 id="l’insolite"><a href="#l’insolite" class="headerlink" title="l’insolite"></a>l’insolite</h4><h3 id="Vocabulaire-loisir-les-vacance-voyage"><a href="#Vocabulaire-loisir-les-vacance-voyage" class="headerlink" title="Vocabulaire loisir-les vacance/voyage"></a>Vocabulaire loisir-les vacance/voyage</h3><h4 id="la-mer"><a href="#la-mer" class="headerlink" title="la mer"></a>la mer</h4><table><thead><tr><th><strong>Loisir à la mer</strong></th><th></th></tr></thead><tbody><tr><td>faire la brasse/crawl</td><td></td></tr><tr><td>nage papillon</td><td></td></tr><tr><td>faire de la planche à voile</td><td></td></tr><tr><td>s‘installer sur la plage</td><td></td></tr><tr><td>aller à la mer/compagne/montagne</td><td></td></tr><tr><td>aux sport d’ hiver</td><td></td></tr><tr><td>faire du tourism/séjournent</td><td></td></tr><tr><td>dans une ville/au bord de la mer</td><td></td></tr><tr><td>en vacance</td><td></td></tr><tr><td>planter le parasol</td><td></td></tr><tr><td>prendre le soleil/des bains du soleil/des coup de soleil</td><td></td></tr><tr><td>faire se baigner</td><td></td></tr><tr><td>bronzer/etre bronzé</td><td></td></tr><tr><td>faire des chateaux de sable</td><td></td></tr><tr><td>ramasserdes coquillage</td><td></td></tr><tr><td>jouer au ballon</td><td></td></tr><tr><td>vaque</td><td></td></tr><tr><td>se noyer</td><td></td></tr><tr><td>porter de bouée</td><td></td></tr><tr><td><strong>Le transport</strong></td><td></td></tr><tr><td>faire de l’auto-stop</td><td></td></tr><tr><td>faire du Co-voiture</td><td></td></tr><tr><td>à vélo/à pied/à cheval</td><td></td></tr><tr><td><strong>Les verbes</strong></td><td></td></tr><tr><td>repose-toibiens/bonne vacance</td><td></td></tr><tr><td>se reposer/se détendre</td><td></td></tr><tr><td><strong>Relatif</strong></td><td></td></tr><tr><td>la plupart de</td><td></td></tr><tr><td>avoir congé payé</td></tr></tbody></table><h4 id="croisiere"><a href="#croisiere" class="headerlink" title="croisière"></a>croisière</h4><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>prendre le bateau/faire une belle croisière</td><td></td></tr><tr><td>faire de la randonnée/un trekking</td><td></td></tr><tr><td>escale</td><td></td></tr><tr><td>un port</td><td></td></tr><tr><td>sous la conduit d’une guide</td><td></td></tr><tr><td>site touristique</td><td></td></tr><tr><td>monument historique</td><td></td></tr><tr><td>enverront</td><td></td></tr><tr><td>cartes postals</td><td></td></tr><tr><td>faire des excursion</td><td></td></tr><tr><td>rapporter des soutenirs de ce voyage oubliable</td></tr></tbody></table><h4 id="une-randonne"><a href="#une-randonne" class="headerlink" title="une randonne"></a>une randonne</h4><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>le circuit</td><td></td></tr><tr><td>faire le tour du pays</td><td></td></tr><tr><td>en large et en longue</td><td></td></tr><tr><td>parcourir</td><td></td></tr><tr><td>dépaysé</td><td></td></tr><tr><td>découvrir des coutumes des paysage</td><td></td></tr><tr><td>verra la dessert</td><td></td></tr><tr><td>à dos de chapeau</td><td></td></tr><tr><td>exotique</td><td></td></tr><tr><td>s’renseigner auprès d’une agence de voyage</td><td></td></tr><tr><td>se changer les idée</td><td></td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> Vocabulaire loisir </tag>
            
            <tag> Grammaire </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vocabulaire loisir</title>
      <link href="/2019/05/22/Vocabulaire-loisir/"/>
      <url>/2019/05/22/Vocabulaire-loisir/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vocabulaire football</title>
      <link href="/2019/05/18/Vocabulaire-football/"/>
      <url>/2019/05/18/Vocabulaire-football/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th>français</th><th>Chinois</th><th></th></tr></thead><tbody><tr><td>promoteur</td><td>推广者/发起人</td><td></td></tr><tr><td>vertus</td><td>道德/美德/效力/功效</td><td></td></tr><tr><td>en rêve de</td><td></td><td></td></tr><tr><td>parasiter</td><td>寄生</td><td></td></tr><tr><td>enjeux</td><td>赌金/输赢你，得失</td><td></td></tr><tr><td>débaucher</td><td>被带坏/使腐坏/解雇</td><td></td></tr><tr><td>rester sur le carreau</td><td>困难状况</td><td></td></tr><tr><td>au palmarès de</td><td>在得奖名单中</td><td></td></tr><tr><td>stade</td><td>体育台/发展阶段</td><td></td></tr><tr><td>l’epoque</td><td>时代</td><td></td></tr><tr><td>la chance relative</td><td>有限的</td><td></td></tr><tr><td>une famille soudee et moyenne</td><td>重组家庭</td><td></td></tr><tr><td>berceau</td><td>摇篮</td><td>bébé cue 到的</td></tr><tr><td>prendre sa retraite</td><td></td><td></td></tr><tr><td>l’image de réussite</td><td></td><td></td></tr><tr><td>repérer</td><td>自我判断/确定位置</td><td></td></tr><tr><td>connaitre</td><td>区别区分</td><td></td></tr><tr><td>décrocher</td><td>拿起/取下/脱离</td><td></td></tr><tr><td>prédit</td><td>预料</td><td></td></tr><tr><td>il cristallise les rêve des garçon et des fille</td><td>照亮了别人的梦想</td><td></td></tr><tr><td>détection</td><td>测试/检测</td><td></td></tr><tr><td>se refuser/se refuser à</td><td>对自己吝啬/节俭/逃避</td><td></td></tr><tr><td>folie</td><td>疯狂</td><td></td></tr><tr><td>voracité</td><td>贪婪</td><td></td></tr><tr><td>recruteur</td><td>征集征兵</td><td></td></tr><tr><td>cosme</td><td>宇宙</td><td></td></tr><tr><td>nuage</td><td>云-困难</td><td></td></tr><tr><td>court sur patte</td><td></td><td></td></tr><tr><td>coéquipier</td><td>同组的人</td><td></td></tr><tr><td>se hisser au niveau de</td><td>攀爬</td><td></td></tr><tr><td>peiner à</td><td>因…痛苦</td><td></td></tr><tr><td>perdre sa repère</td><td></td><td></td></tr><tr><td>s’écrouler dans sa scolarité</td><td>崩塌</td><td></td></tr><tr><td>cauchemar</td><td>噩梦/让人痛苦的人或事情</td><td></td></tr><tr><td>apercevoir</td><td>隐约看见</td><td></td></tr><tr><td>toutefois</td><td>不过/即使如此</td><td></td></tr><tr><td>faire semblant de/feindre/simuler</td><td>假装</td><td></td></tr><tr><td>au contraire</td><td></td><td></td></tr><tr><td>faire carriere</td><td></td><td></td></tr><tr><td>je lis dans leur yeux ,soit de la pitie ,soit dela satisfaction de ne pas m’avoir vu réussi</td><td></td><td></td></tr><tr><td>néanmoins</td><td></td><td></td></tr><tr><td>marcher <strong>à merveille</strong></td><td>极好的…</td><td></td></tr><tr><td>pénalise</td><td>惩罚</td><td></td></tr><tr><td>hebergement</td><td>住宿</td><td></td></tr><tr><td>masculin</td><td>男性气息</td><td></td></tr><tr><td>écarter</td><td>逃离</td><td>s’ecarter du collective</td></tr><tr><td>faire ses devoir</td><td>义务</td><td></td></tr><tr><td>contraignant</td><td>强制的</td></tr></tbody></table><ul><li>on lui dit si doré que le braillant élevé qu’il est à l’ecole primaire se désintéressé peu à peu de ses cours pour mieux rêver à sa carier sportive</li><li>mon enfance est déroule sans nuage avec les certitude pleine la tete et une avenir assure</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> football </tag>
            
            <tag> vocabulaire </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Science Exact|1.3 l&#39;expression de la quantite</title>
      <link href="/2019/05/10/Science-Exact-1-3-l-expression-de-la-quantite/"/>
      <url>/2019/05/10/Science-Exact-1-3-l-expression-de-la-quantite/</url>
      
        <content type="html"><![CDATA[<h3 id="1-3-1-lois-de-Snell-Descartes"><a href="#1-3-1-lois-de-Snell-Descartes" class="headerlink" title="1.3.1 lois de Snell-Descartes"></a>1.3.1 lois de <strong>Snell</strong>-Descartes</h3><p>milieu ①                <u>\ | /</u></p><p>milieu ②</p><p>(indice de milieu)</p><p>rayon/angle incident</p><p>rayon/angle réfracté</p><h3 id="1-3-6-inverse-d’une-fraction-l’oppose-d’une-nombre"><a href="#1-3-6-inverse-d’une-fraction-l’oppose-d’une-nombre" class="headerlink" title="1.3.6 inverse d’une fraction/l’oppose d’une nombre"></a>1.3.6 inverse d’une fraction/l’oppose d’une nombre</h3><p>la fraction a/b r\est l’inverse de la fraction b/a</p><p>le conjugués(?) de a+bi est a-bi</p><h3 id="1-3-7-puissance-de-10"><a href="#1-3-7-puissance-de-10" class="headerlink" title="1.3.7 puissance de 10"></a>1.3.7 puissance de 10</h3><table><thead><tr><th>notation avec exposant</th><th>notation sans exposant</th><th></th><th>lecture</th></tr></thead><tbody><tr><td>10^1^</td><td>10</td><td>dixième</td><td>10 puissante un</td></tr><tr><td>10^2^</td><td>100</td><td>centième</td><td></td></tr><tr><td>10^3^</td><td></td><td>millième</td><td></td></tr><tr><td>10^4^</td><td></td><td>dix millième</td><td></td></tr><tr><td>10^5^</td><td></td><td>cent millième</td><td></td></tr><tr><td>10^6^</td><td></td><td>millionième</td><td></td></tr><tr><td>10^7^</td><td></td><td></td><td></td></tr><tr><td>10^8^</td><td></td><td></td><td></td></tr><tr><td>10^9^</td><td></td><td>milliardième</td></tr></tbody></table><h3 id="1-3-9-les-nombres-complexes"><a href="#1-3-9-les-nombres-complexes" class="headerlink" title="1.3.9  les nombres complexes"></a>1.3.9  les nombres complexes</h3><h4 id="Definition-representation"><a href="#Definition-representation" class="headerlink" title="Definition représentation"></a>Definition représentation</h4><p>le partie imagine/reel</p><p>module</p><p>conjugue</p><p>exponentielle phi = Exp(e^x^) </p><p>fonction réciproque/Bijection réciproque 反函数</p><p>欧拉变换：pe^θi^=p(cosθ + i sinθ)</p>]]></content>
      
      
      <categories>
          
          <category> Science Exact </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Science Exact </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>comprehension ecrit</title>
      <link href="/2019/05/08/comprehension-ecrit/"/>
      <url>/2019/05/08/comprehension-ecrit/</url>
      
        <content type="html"><![CDATA[<p>Apres avoir penser tout les arguments ,je disait que</p><p>C’est le cas de</p><p>C’est en partie vrai</p><p>Il faudra approfondir la question</p><p>Cette situation ==donne à（使）== réfléchir.</p><p>D‘ailleurs / en outre</p><p>D’un cote……de l’autre</p><p>Non seulement ,mais encore</p><p>en revanche.</p><p>Quant à /à propos de</p><p>l’exemple suivant illustre/demontre bien que</p><p>cet exemple constitue une indication sur……/est le sign de/infirme idee que</p><p>Il n’est pas toujours évident que……</p><p>Il n’empêche que</p><p>Il ne reste pas moins que……然而 不过</p><p>En conclusion</p><p>On peut en déduire que</p><p>Devant la vérité et sinistre de</p><p>il nous faut affronter les épreuve/concurrence aves philosophie/courage/douleur des </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Science Exact|1.2 les ensembles de nombres</title>
      <link href="/2019/05/03/Science-Exact-1-2-les%20ensembles%20de%20nombres/"/>
      <url>/2019/05/03/Science-Exact-1-2-les%20ensembles%20de%20nombres/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h3 id="1-2-1-presentation-des-ensembles-de-nombres"><a href="#1-2-1-presentation-des-ensembles-de-nombres" class="headerlink" title="1.2.1 présentation des ensembles de nombres"></a>1.2.1 présentation des ensembles de nombres</h3><table><thead><tr><th>ensmbles</th><th>lecture</th><th>sens</th></tr></thead><tbody><tr><td>N</td><td>N</td><td>l’ensemble des entier naturel</td></tr><tr><td>N+</td><td>N plus/étoile</td><td>l’ensemble des entier positive(non nul)</td></tr><tr><td>N-</td><td>N moins</td><td>l’ensemble des entier négative</td></tr><tr><td>z</td><td>Z</td><td>l’ensemble des entier relatif</td></tr><tr><td>R</td><td>R</td><td>l’ensemble des réels</td></tr><tr><td>c</td><td>C</td><td>l’ensemble des rationnel</td></tr><tr><td>Q</td><td></td><td>l’ensemble des rationnel</td></tr><tr><td>∞</td><td>l’infinit</td></tr></tbody></table><h3 id="1-2-2-l’ensemble-N-des-entiers-natuels"><a href="#1-2-2-l’ensemble-N-des-entiers-natuels" class="headerlink" title="1.2.2 l’ensemble N des entiers natuels"></a>1.2.2 l’ensemble N des entiers natuels</h3><p>les chiffres sont 0,1,2,3,4……</p><h4 id="la-graph"><a href="#la-graph" class="headerlink" title="la graph"></a>la graph</h4><table><thead><tr><th></th><th>lecture</th></tr></thead><tbody><tr><td>个位</td><td>unité</td></tr><tr><td>十位</td><td>dizaine</td></tr><tr><td>百位</td><td>certaine</td></tr><tr><td>千位</td><td>millier</td></tr><tr><td>万位</td><td>dizaine des milliers</td></tr></tbody></table><h4 id="les-prefix-quantitatif"><a href="#les-prefix-quantitatif" class="headerlink" title="les préfix quantitatif"></a>les préfix quantitatif</h4><table><thead><tr><th>signifient</th><th>préfix</th></tr></thead><tbody><tr><td>0.5</td><td>semi/demi/nemi/mi/hemi</td></tr><tr><td>1(un seul)</td><td>mono/uni</td></tr><tr><td>2</td><td>bi/di</td></tr><tr><td>3</td><td>tri</td></tr><tr><td>4</td><td>quand</td></tr><tr><td>5</td><td>quinqua/penta</td></tr><tr><td>6</td><td>hexa(gonal/gone)</td></tr><tr><td>7</td><td>hepta</td></tr><tr><td>8</td><td>octo</td></tr><tr><td>9</td><td>ennéa</td></tr><tr><td>10</td><td>deca</td></tr></tbody></table><p>par example: le silicium est un semi conducteur.</p><h4 id="les-notion-decimale"><a href="#les-notion-decimale" class="headerlink" title="les notion décimale"></a>les notion décimale</h4><p>les chiffre placent à la gauche de la virgule: le partie décimale</p><p>les chiffre placent à la droite de la virgule: le partie entière</p><h4 id="PS-cours"><a href="#PS-cours" class="headerlink" title="PS.cours"></a>PS.cours</h4><p>TP tarvaux diriges</p><p>TP fravaux pratique </p><h4 id="les-fraction"><a href="#les-fraction" class="headerlink" title="les fraction"></a>les fraction</h4><table><thead><tr><th>les fraction</th><th>lecture</th></tr></thead><tbody><tr><td>1/2</td><td>un demi , la moitié</td></tr><tr><td>1/3</td><td>un tiers</td></tr><tr><td>1/4</td><td>un quart</td></tr><tr><td>2/3</td><td>deux tiers</td></tr><tr><td>3/4</td><td>trois quarts</td></tr><tr><td>1/5</td><td><strong>un cinquième</strong></td></tr><tr><td>1/7</td><td>un septième</td></tr></tbody></table><h4 id="Arrondi-mathematiques"><a href="#Arrondi-mathematiques" class="headerlink" title="Arrondi (mathématiques)"></a>Arrondi (mathématiques)</h4><p>π ≈ 3.1415926</p><p>π est approché par 1.41 à 10^-3 près par defaut</p><p>π est approché par 1.42 à 10^-3 près par excès</p><h4 id="les-relations-entre-les-chiffres"><a href="#les-relations-entre-les-chiffres" class="headerlink" title="les relations entre les chiffres"></a>les relations entre les chiffres</h4><p>a＜x＜b → x∈]a,b[ ————– x est compri entre a et b</p><p>a ≤ x ≤ b → x∈[a,b] ————– x appartien à l’intervalle ferme de a b</p><p>a est la borne inférieur</p><p>b est la borne superieur</p><h4 id="la-terre"><a href="#la-terre" class="headerlink" title="la terre"></a>la terre</h4><p>l’hemisphère nord</p><p>l’équateur</p><p>l’hémisphère sud</p>]]></content>
      
      
      <categories>
          
          <category> Science Exact </category>
          
      </categories>
      
      
        <tags>
            
            <tag> note </tag>
            
            <tag> Science Exact </tag>
            
            <tag> l&#39;ensemble </tag>
            
            <tag> les préfix quantitatif </tag>
            
            <tag> les notion décimale </tag>
            
            <tag> Arrondi (mathématiques) </tag>
            
            <tag> les relations entre les chiffres </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>le pluriel/l&#39;adjective</title>
      <link href="/2019/04/28/190428-note/"/>
      <url>/2019/04/28/190428-note/</url>
      
        <content type="html"><![CDATA[<h3 id="le-pluriel"><a href="#le-pluriel" class="headerlink" title="le pluriel"></a>le pluriel</h3><h4 id="1-s"><a href="#1-s" class="headerlink" title="1. +s"></a>1. +s</h4><h4 id="2-以-au-ou-eau-eu结尾的＋x"><a href="#2-以-au-ou-eau-eu结尾的＋x" class="headerlink" title="2. 以==au==,ou,==eau==,eu结尾的＋x"></a>2. 以==au==,ou,==eau==,eu结尾的＋x</h4><p>==-ou → -ous : un clou —- des clous==</p><h4 id="3-al结尾的→aux"><a href="#3-al结尾的→aux" class="headerlink" title="3. al结尾的→aux"></a>3. al结尾的→aux</h4><p>==sauf bananl naval final fatal natal==</p><h4 id="4-s-x结尾的不变"><a href="#4-s-x结尾的不变" class="headerlink" title="4. s,x结尾的不变"></a>4. s,x结尾的不变</h4><h4 id="5-单复数词形不同-如"><a href="#5-单复数词形不同-如" class="headerlink" title="5. 单复数词形不同,如:"></a>5. 单复数词形不同,如:</h4><pre><code>une oeil 一只眼睛→des yeux双眼monsieur一位先生→messieurs 先生们madame一位女士→mesdames女士们mademoiselle一位小姐→mesdemoiselles小姐们</code></pre><h3 id="adjective"><a href="#adjective" class="headerlink" title="adjective"></a>adjective</h3><p>法语形容词性数变化总结</p><h4 id="形容词的性"><a href="#形容词的性" class="headerlink" title="形容词的性"></a>形容词的性</h4><p>形容词的性一般是在阳性形式后加字母e，如：<br>un grand bureau<br>une grande<br>maison</p><h5 id="1、有些形容词，其阳性形式变为阴性时，词尾要有一定变化，但仍有一定规律可循："><a href="#1、有些形容词，其阳性形式变为阴性时，词尾要有一定变化，但仍有一定规律可循：" class="headerlink" title="1、有些形容词，其阳性形式变为阴性时，词尾要有一定变化，但仍有一定规律可循："></a>1、有些形容词，其阳性形式变为阴性时，词尾要有一定变化，但仍有一定规律可循：</h5><h6 id="1）以-gu结尾的形容词阳性形式变阴性时变-gue-如："><a href="#1）以-gu结尾的形容词阳性形式变阴性时变-gue-如：" class="headerlink" title="1）以-gu结尾的形容词阳性形式变阴性时变-guë, 如："></a>1）以-gu结尾的形容词阳性形式变阴性时变-guë, 如：</h6><pre><code>un criaigu (一声惊叫)une pointe aiguë （一个尖端）contingu - continguë</code></pre><h6 id="2）以-eau-ou-结尾的形容词，其阳性形式为-elle-olle-如："><a href="#2）以-eau-ou-结尾的形容词，其阳性形式为-elle-olle-如：" class="headerlink" title="2）以-eau, -ou 结尾的形容词，其阳性形式为-elle, -olle, 如："></a>2）以-eau, -ou 结尾的形容词，其阳性形式为-elle, -olle, 如：</h6><pre><code>un beaupays (一个美丽的国家)une belle gravure (一幅漂亮的木刻)un terrainmou （一块松软的土地）une chair molle （一种软的肌肉）但是flou (模糊的)，hindou （印地的）的阴性形式为floue和hindoue。</code></pre><h6 id="3）以-el-ul-l结尾的形容词，其阴性形式为-elle-ulle-ille，如："><a href="#3）以-el-ul-l结尾的形容词，其阴性形式为-elle-ulle-ille，如：" class="headerlink" title="3）以-el, -ul, -l结尾的形容词，其阴性形式为-elle, -ulle, ille，如："></a>3）以-el, -ul, -l结尾的形容词，其阴性形式为-elle, -ulle, ille，如：</h6><pre><code>un cruel ennemi (凶残的敌人)     une force cruelle （凶残的力量）un devoir nul （毫无价值的作业）     une note nulle （零分）     un pareil espoir （这样的期望）     une vie pareille （这样的生活）</code></pre><h6 id="4）以-ien-on结尾的形容词，其阴性形式为-ienne和-onne，如："><a href="#4）以-ien-on结尾的形容词，其阴性形式为-ienne和-onne，如：" class="headerlink" title="4）以-ien, -on结尾的形容词，其阴性形式为-ienne和-onne，如："></a>4）以-ien, -on结尾的形容词，其阴性形式为-ienne和-onne，如：</h6><pre><code>un château ancien （一所旧城堡）une bague ancienne （一只旧戒指）un bon numéro （一个好数）une bonne affaire （一件好事）</code></pre><h6 id="5-以-an结尾的形容词，其阴性形式为-ane，如："><a href="#5-以-an结尾的形容词，其阴性形式为-ane，如：" class="headerlink" title="5) 以-an结尾的形容词，其阴性形式为-ane，如："></a>5) 以-an结尾的形容词，其阴性形式为-ane，如：</h6><pre><code>l’esprit partisan （宗派思想）    une querelle partisane （派别争吵）    le territoire persan (波斯领土)les lettres persanes （波斯人信札）</code></pre><p>   但 paysan 的阴性形式为 paysanne, 如：<br>    le labeur paysan （农民的劳作）la vie paysanne （农民的生活）w</p><h6 id="6）以-et结尾的形容词，其阴性形式为-ette，以-ot结尾的形容词，其阴性形式为-ote，如："><a href="#6）以-et结尾的形容词，其阴性形式为-ette，以-ot结尾的形容词，其阴性形式为-ote，如：" class="headerlink" title="6）以-et结尾的形容词，其阴性形式为-ette，以-ot结尾的形容词，其阴性形式为-ote，如："></a>6）以-et结尾的形容词，其阴性形式为-ette，以-ot结尾的形容词，其阴性形式为-ote，如：</h6><pre><code>un enfant muet (一个哑巴孩子)une douleur muette （无声的痛苦）    un conte idiot （一个胡编的故事）une farce idiote (一个愚蠢的玩笑)</code></pre><p>但maigriot（瘦小的）, palot (苍白的)，sot (愚蠢的)，viellot (老的)的阴性形式为-otte，如：<br>    un sot conseil (一个馊主意)<br>    une réponse sotte （一个愚笨的答复）</p><h6 id="7）以-er结尾的形容词，其阴性形式为-ere-如：-le-derniermot-最后一句话"><a href="#7）以-er结尾的形容词，其阴性形式为-ere-如：-le-derniermot-最后一句话" class="headerlink" title="7）以-er结尾的形容词，其阴性形式为-ère,如：     le derniermot (最后一句话)"></a>7）以-er结尾的形容词，其阴性形式为-ère,如：     le derniermot (最后一句话)</h6><pre><code>la dernière page （最后一页）     un léger retard (迟到一会儿)     unebarque légère (一叶轻舟)</code></pre><h6 id="8）以-teur-结尾的形容词，其阴性形式为-trice，如："><a href="#8）以-teur-结尾的形容词，其阴性形式为-trice，如：" class="headerlink" title="8）以-teur 结尾的形容词，其阴性形式为-trice，如："></a>8）以-teur 结尾的形容词，其阴性形式为-trice，如：</h6><pre><code>un nomévocateur (引起联想的名字)une phrase évocatrice （引起联想的句子）</code></pre><h6 id="9-以-f结尾的形容词，其阴性形式为-ve，如："><a href="#9-以-f结尾的形容词，其阴性形式为-ve，如：" class="headerlink" title="9) 以-f结尾的形容词，其阴性形式为-ve，如："></a>9) 以-f结尾的形容词，其阴性形式为-ve，如：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">un froid vif （刺骨的寒冷）une lumière vive （刺目的亮光）</span><br></pre></td></tr></table></figure><h6 id="10）以-eux-oux-eur结尾的形容词，其阴性形式分别为-euse-ouse-euse，-如："><a href="#10）以-eux-oux-eur结尾的形容词，其阴性形式分别为-euse-ouse-euse，-如：" class="headerlink" title="10）以-eux, -oux, -eur结尾的形容词，其阴性形式分别为-euse, -ouse, -euse， 如："></a>10）以-eux, -oux, -eur结尾的形容词，其阴性形式分别为-euse, -ouse, -euse， 如：</h6><pre><code>un garçon sérieux （一个严肃的男孩）     une idée sérieuse（一个严肃的想法）     un enfant jaloux　（一个有妒忌心的孩子）     une fille jalouse　（一个有妒忌心的女孩）     un rire trompeur　（奸笑）une réponse trompeuse　（骗人的答复）</code></pre><p>但是meilleur(较好的)，antérieur(以前的), supérieur（高级的）, inférieur（低下的）, majeur（成年的），其阴性形式是在词尾加字母e, 如：</p><pre><code>un meilleur avis (一个较好的主意)     une meilleure méthode （一个更好的办法）</code></pre><h6 id="11）其阴性形式词尾是ete-如："><a href="#11）其阴性形式词尾是ete-如：" class="headerlink" title="11）其阴性形式词尾是ète, 如："></a>11）其阴性形式词尾是ète, 如：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Complet（完整的）, incomplet （不完整的）, indiscret（不谨慎的）, discret（谨慎的）, inquiet （不安的）, secret（秘密的）等形容词，    </span><br><span class="line">un regard inquiet     l’âme inquiète</span><br></pre></td></tr></table></figure><h6 id="12）其阴性形式结尾为-sse，如："><a href="#12）其阴性形式结尾为-sse，如：" class="headerlink" title="12）其阴性形式结尾为-sse，如："></a>12）其阴性形式结尾为-sse，如：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Bas（低）, épais（厚）, gros（肥）, faux（假）, roux（红棕色）, las（厌倦）,métis（混血的）等形容词， </span><br><span class="line">un ciel bas (阴沉的天)      une température basse （低温）</span><br></pre></td></tr></table></figure><h5 id="2、某些形容词的阴性形式比较特殊，无规律课循，它们是："><a href="#2、某些形容词的阴性形式比较特殊，无规律课循，它们是：" class="headerlink" title="2、某些形容词的阴性形式比较特殊，无规律课循，它们是："></a>2、某些形容词的阴性形式比较特殊，无规律课循，它们是：</h5><p>blanc              blanche ;<br>franc(坦白的)    franche<br>frais（新鲜的） fraîche ;<br>sec（干的）      sèche</p><p>doux（温和的）  douce ;<br>tiers（第三）   tierce   </p><p>long               longue ;</p><p>favori（受宠的）favorite<br>coi（安静的）   coite ;</p><p>vieux                    vielle</p><p>bénin（良性的） bénigne ;<br>malin（狡猾的） maligne</p><p>pécheur（有罪的）pécheresse<br>vengeur（复仇的）vengeresse<br>maître（主要的） maîtresse ;<br>traître（叛变的）traîtresse</p><p>caduc（过时的）  caduque ;<br>grec（希腊的）   grecque<br>turc（土耳其的） turque ;<br>hébreu（希伯来的）hébraïque ;</p><p>gentil           gentille</p><h4 id="二、形容词的数"><a href="#二、形容词的数" class="headerlink" title="二、形容词的数"></a>二、形容词的数</h4><h5 id="1、形容词变复数时，一般的规则是在单数形式的词尾加字母s-如："><a href="#1、形容词变复数时，一般的规则是在单数形式的词尾加字母s-如：" class="headerlink" title="1、形容词变复数时，一般的规则是在单数形式的词尾加字母s, 如："></a>1、形容词变复数时，一般的规则是在单数形式的词尾加字母s, 如：</h5><pre><code>un grand cahier （一个大本子）degrands cahiers (一些大本子)une phrase brève （一个简短的句子）de brèves phrases（一些简短的句子）</code></pre><h5 id="2、如果形容词单数形式以字母s或字母x结尾，其复数形式不变，如："><a href="#2、如果形容词单数形式以字母s或字母x结尾，其复数形式不变，如：" class="headerlink" title="2、如果形容词单数形式以字母s或字母x结尾，其复数形式不变，如："></a>2、如果形容词单数形式以字母s或字母x结尾，其复数形式不变，如：</h5><pre><code>un temps gris (阴暗的天)desmurs gris （灰色的墙）unfaux passeport （一本假护照）defaux papiers （假文件）</code></pre><h5 id="3、以-al结尾的形容词变复数时词尾为-aux，-如："><a href="#3、以-al结尾的形容词变复数时词尾为-aux，-如：" class="headerlink" title="3、以-al结尾的形容词变复数时词尾为-aux，, 如："></a>3、以-al结尾的形容词变复数时词尾为-aux，, 如：</h5><p>ungeste amical （友好的手势）      despropos amicaux （友好的话语）</p><p>但banal, final, naval, natal, colossal, fatal,glacial, bancal,等形容词变复数时加字母s， 如：le mot final （最后一个字）<br>les combats finals （最后几次战斗）</p><h5 id="4、以-eau结尾的形容词，其复数形式加字母x，如："><a href="#4、以-eau结尾的形容词，其复数形式加字母x，如：" class="headerlink" title="4、以-eau结尾的形容词，其复数形式加字母x，如："></a>4、以-eau结尾的形容词，其复数形式加字母x，如：</h5><pre><code>unbeau paysage (一处漂亮的风景)debeaux habits （美丽的衣服）</code></pre><h4 id="三．形容词的位置"><a href="#三．形容词的位置" class="headerlink" title="三．形容词的位置"></a>三．形容词的位置</h4><p> 在法语中，形容词的种类非常丰富：有感叹形容词，数字形容词，和品质形容词等等。如：</p><pre><code>joli,e 漂亮的; petit,e 小的，年幼的; grand,e 高大的; bon,bonne 好的; beau, bel漂亮的 ; nouveau, nouvel, nouvelle 新的; sérieux, euse 严肃的.</code></pre><p>品质形容词是用来修饰名词的字，以补充说明人，动物或事物（好或坏）的品质。品质形容词必须与它修饰的名词作阴，阳性和单，复数的配合。如：</p><pre><code>une jolie maison 一个漂亮的屋子; une mauvaisenouvelle一个坏消息 ; de nouveaux locataires新来的房客 ; de jeunes femmes年轻的女人们 ; Les gâteaux sontbons. 糕点味道不错。</code></pre><p>一些常用的品质形容词，通常放在名词前，大部分的形容词是摆在名词后面的。</p><h5 id="有些形容词却一定要摆在名词前。如："><a href="#有些形容词却一定要摆在名词前。如：" class="headerlink" title="有些形容词却一定要摆在名词前。如："></a>有些形容词却一定要摆在名词前。如：</h5><pre><code>bon, mauvais, jeune, vieux, beau, joli,nouveau</code></pre><h5 id="必须摆在名词后面的形容词"><a href="#必须摆在名词后面的形容词" class="headerlink" title="必须摆在名词后面的形容词"></a>必须摆在名词后面的形容词</h5><h6 id="•表明颜色的形容词"><a href="#•表明颜色的形容词" class="headerlink" title="•表明颜色的形容词"></a>•表明颜色的形容词</h6><pre><code>une voiture bleue ; un ciel gris ; une robe noire ; des briquesrouges ; un chapeau blanc ; une maison jaune</code></pre><h6 id="•表示国籍的形容词"><a href="#•表示国籍的形容词" class="headerlink" title="•表示国籍的形容词"></a>•表示国籍的形容词</h6><pre><code>un écrivain chinois ; un élève français ; une fille étrangère ; une régionafricaine</code></pre><h6 id="•表示形状的形容词"><a href="#•表示形状的形容词" class="headerlink" title="•表示形状的形容词"></a>•表示形状的形容词</h6><pre><code>une table ronde ; un terrain carré ;une règle triangulaire</code></pre><h6 id="•表示宗教的形容词"><a href="#•表示宗教的形容词" class="headerlink" title="•表示宗教的形容词"></a>•表示宗教的形容词</h6><pre><code>un homme catholique ; des pays musulmans ; la morale chrétienne</code></pre><h6 id="•作形容词用的过去分词"><a href="#•作形容词用的过去分词" class="headerlink" title="•作形容词用的过去分词"></a>•作形容词用的过去分词</h6><pre><code>un chien blessé ; une femme fatiguée</code></pre><h6 id="•因摆放的位置不同而意义也不同的形容词"><a href="#•因摆放的位置不同而意义也不同的形容词" class="headerlink" title="•因摆放的位置不同而意义也不同的形容词"></a>•因摆放的位置不同而意义也不同的形容词</h6><pre><code>un homme brave（勇敢的人） ; un brave homme（正直坦率的人）un grand homme （伟人）; un homme grand（高大的人）une famille pauvre（贫穷的家庭） ; mon pauvre ami（我可怜的朋友）la dernière fois（最后一次）; la fois dernière（上一次）un tissu cher（昂贵的料子）; mon cher ami（亲密的朋友）un certain courage（几分勇气） ; une preuvecertaine（证据确凿）un bon homme （老实人）; un homme bon（好人）un ancien hôtel （以前是一间旅馆）; une maison ancienne（旧房子）une fause femme（有男人假扮成的女人） ; une femme fausse（做作的女人）</code></pre><h3 id="Du-nom-a-l’adjectif"><a href="#Du-nom-a-l’adjectif" class="headerlink" title="Du nom à l’adjectif"></a>Du nom à l’adjectif</h3><h4 id="1-简单物理状态表示"><a href="#1-简单物理状态表示" class="headerlink" title="1. 简单物理状态表示"></a>1. 简单物理状态表示</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">grand------grandeur</span><br><span class="line">lent-----lenteur</span><br><span class="line">large-----largeur/ largesse</span><br><span class="line">doux-----douceur</span><br><span class="line">haut-----hauteur</span><br></pre></td></tr></table></figure><h4 id="2-品质与概念化形容词，表达程度-bilite-ite-itie-te"><a href="#2-品质与概念化形容词，表达程度-bilite-ite-itie-te" class="headerlink" title="2. 品质与概念化形容词，表达程度 -bilité/-ité/-itié/-té"></a>2. 品质与概念化形容词，表达程度 -bilité/-ité/-itié/-té</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">amical-----amitié</span><br><span class="line">amaible-----amabilité</span><br><span class="line">libre-----liberté</span><br><span class="line">celebre-----célébrité</span><br></pre></td></tr></table></figure><h4 id="3-本身来自名词-以-eux结尾"><a href="#3-本身来自名词-以-eux结尾" class="headerlink" title="3. 本身来自名词,以-eux结尾"></a>3. 本身来自名词,以-eux结尾</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">parasseux-----paresse</span><br><span class="line">amoureux-----amour</span><br></pre></td></tr></table></figure><h4 id="4-ion"><a href="#4-ion" class="headerlink" title="4. -ion"></a>4. -ion</h4><h4 id="5-ance-ence"><a href="#5-ance-ence" class="headerlink" title="5. ance/ence"></a>5. ance/ence</h4><h4 id="6-主义-isme"><a href="#6-主义-isme" class="headerlink" title="6. 主义 -isme"></a>6. 主义 -isme</h4>]]></content>
      
      
      
        <tags>
            
            <tag> note française </tag>
            
            <tag> le pluriel </tag>
            
            <tag> l&#39;adjective </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Science Exact-Exercice</title>
      <link href="/2019/04/28/Science-Exact-Exercise/"/>
      <url>/2019/04/28/Science-Exact-Exercise/</url>
      
        <content type="html"><![CDATA[<h3 id="exercice"><a href="#exercice" class="headerlink" title="exercice"></a>exercice</h3><h4 id="EX1"><a href="#EX1" class="headerlink" title="EX1"></a>EX1</h4><ol><li>V(a,b)∈R² (a+b)²=a²+b²+2ab<br><code>quelque soit a,b apartenant à R carré ,</code></li><li>Vx∈R 存在y∈R|x＜y</li><li>8x 2 [0; 1]; x &gt; 0 ) 9y 2 R; y2 = x</li></ol><h4 id="EX2"><a href="#EX2" class="headerlink" title="EX2"></a>EX2</h4><ol><li>Pour tout x de R, x positif implique qui il exist y de R plus, tel que y soit la racine carré de x.</li><li>pour tout couple x, y,d’elementaire de R croix R ,x different de y entraîné que la différence de x et y .</li></ol><h3 id="reviser"><a href="#reviser" class="headerlink" title="réviser"></a>réviser</h3><h4 id="ensemble"><a href="#ensemble" class="headerlink" title="ensemble"></a>ensemble</h4><ol><li>N = (0; 1; 2; ) est l’ensemble des entiers naturels,</li><li>Z = ( −2; −1; 0; 1; 2) est l’ensemble des entiers relatifs,</li><li>Q est l’ensemble des rationnels (quotients de deux nombres entiers relatifs</li><li>R est l’ensemble des r´eels<h4 id="Logique"><a href="#Logique" class="headerlink" title="Logique"></a>Logique</h4>pour tout” se note ∀<br>– “il existe ” se note ∃<br>– “appartient” se note ∈<br>– “tel que” se note tq 1</li></ol><p>– A et B se note A ∧ B<br>– A ou B se note A ∨ B<br>– “A implique B ” se note A =⇒ B<br>– “contraire de A” se note eA.</p>]]></content>
      
      
      <categories>
          
          <category> Science Exact </category>
          
      </categories>
      
      
        <tags>
            
            <tag> note </tag>
            
            <tag> Science Exact </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Science Exact|1.4 les action sur les nombres</title>
      <link href="/2019/04/25/Science-Exact-1-4-les%20action%20sur%20les%20nombres/"/>
      <url>/2019/04/25/Science-Exact-1-4-les%20action%20sur%20les%20nombres/</url>
      
        <content type="html"><![CDATA[<h3 id="1-4-2-Comparaison"><a href="#1-4-2-Comparaison" class="headerlink" title="1.4.2 Comparaison"></a>1.4.2 Comparaison</h3><p>On compare x et y / x à y / x avec y</p><table><thead><tr><th>symbol</th><th>lecture</th><th>commentaire</th></tr></thead><tbody><tr><td>=</td><td>a est égale à b</td><td></td></tr><tr><td>≈</td><td>a est approximent égale à b</td><td></td></tr><tr><td>≠</td><td>a est diffierent que b</td><td></td></tr><tr><td>＜</td><td>a est inferieur à b</td><td></td></tr><tr><td>≤</td><td>a est inferieur ou égale à b</td><td></td></tr><tr><td>＞</td><td>a est supérieur à b</td><td></td></tr><tr><td>≥</td><td>a est supérieur ou égale à b</td><td></td></tr><tr><td>⋘</td><td>a est très petite devant b</td><td></td></tr><tr><td>⋙</td><td>a est très grand devant b</td></tr></tbody></table><h3 id="1-4-4-les-operation-elementaire"><a href="#1-4-4-les-operation-elementaire" class="headerlink" title="1.4.4 les opération élémentaire"></a>1.4.4 les opération élémentaire</h3><h4 id="les-symboles-d’operation"><a href="#les-symboles-d’operation" class="headerlink" title="les symboles d’opération"></a>les symboles d’opération</h4><table><thead><tr><th>symbole</th><th></th><th>opération</th><th>lecture</th><th></th></tr></thead><tbody><tr><td>+</td><td>plus</td><td>additionner</td><td>addition</td><td>terme/résultats</td></tr><tr><td>-</td><td>moins</td><td>soustrair</td><td>soustraction</td><td></td></tr><tr><td>×</td><td></td><td>multiplier par</td><td>multiplication</td><td>facteur/produit</td></tr><tr><td>÷</td><td></td><td>diviser par</td><td>division</td><td>rapport/quotient</td></tr><tr><td>dy/dx</td><td>dérivée de y（par rapport à x）</td><td>dériver</td><td>dérivation</td><td></td></tr><tr><td>y^n^</td><td>dérivée second/cube/niem de y</td><td>dériver n fois</td><td>double/n-dérivation</td><td></td></tr><tr><td>∫</td><td>intégrale de</td><td>intégrer</td><td>intégration</td><td></td></tr><tr><td>∬</td><td>intégrer double/de surface</td><td>integrer 2 fois</td><td>double intégration</td><td></td></tr><tr><td>∭</td><td>intégrer triple/de volume</td><td>integrer 3 fois</td><td>triple intégration</td><td></td></tr><tr><td>\</td><td>\</td><td></td><td></td><td></td><td>Valeur absolue</td><td></td></tr><tr><td>-∞</td><td></td><td></td><td>moins infini</td><td></td></tr><tr><td>∑</td><td>la somme de</td><td>sommer</td><td></td><td></td></tr><tr><td>∏</td><td>la produit de</td><td>faire/effectuer le produit de</td><td></td><td></td></tr><tr><td>a/b</td><td>fraction</td><td></td><td></td></tr></tbody></table><h4 id="nombre-de-fois"><a href="#nombre-de-fois" class="headerlink" title="nombre de fois"></a>nombre de fois</h4><table><thead><tr><th></th><th>lecture</th></tr></thead><tbody><tr><td>1</td><td>premier</td></tr><tr><td>2</td><td>second/deuxième</td></tr><tr><td>3</td><td>troisième</td></tr><tr><td>4</td><td>quatrième</td></tr><tr><td>5</td><td><strong>cinquième</strong></td></tr><tr><td>6</td><td>sixième</td></tr><tr><td>7</td><td>septième</td></tr><tr><td>8</td><td>huitième</td></tr><tr><td>9</td><td><strong>neuvième</strong></td></tr><tr><td>10</td><td>dixième</td></tr><tr><td>……</td><td>……</td></tr><tr><td>n</td><td>N+iéme</td></tr></tbody></table><h4 id="multiplication"><a href="#multiplication" class="headerlink" title="multiplication"></a>multiplication</h4><table><thead><tr><th style="text-align:left">facteur</th><th>lecture(n fois)</th></tr></thead><tbody><tr><td style="text-align:left"></td><td>seul</td></tr><tr><td style="text-align:left"></td><td>double</td></tr><tr><td style="text-align:left"></td><td>triple</td></tr><tr><td style="text-align:left"></td><td>quadruple</td></tr><tr><td style="text-align:left"></td><td>quintuple</td></tr><tr><td style="text-align:left"></td><td>sextuple</td></tr><tr><td style="text-align:left"></td><td>septuple</td></tr><tr><td style="text-align:left"></td><td>octuple/huit fois</td></tr><tr><td style="text-align:left"></td><td>neuf fois</td></tr><tr><td style="text-align:left">10</td><td>décuple</td></tr><tr><td style="text-align:left">100</td><td>centuple</td></tr><tr><td style="text-align:left">1000</td><td></td></tr><tr><td style="text-align:left">10000</td></tr></tbody></table><h4 id="additionner-soustraire"><a href="#additionner-soustraire" class="headerlink" title="additionner/soustraire"></a>additionner/soustraire</h4><p>l’addiction est l’operation qui permet calculer le somme<br>le soustraire est l’operation qui permet calculer le différence<br>Exp. 1+3=4<br>terms résultats</p><h4 id="multiplie"><a href="#multiplie" class="headerlink" title="multiplié"></a>multiplié</h4><p>facteur produit</p><h5 id="le-development"><a href="#le-development" class="headerlink" title="- le development"></a>- le development</h5><p>Developer un produit de facteur C’est le transformer en une somme ou une difference de terms.<br>(x-a)(x+a)=x^2^-a^2^<br>identité remarquable</p><h5 id="la-factorisation"><a href="#la-factorisation" class="headerlink" title="- la factorisation"></a>- la factorisation</h5><p>factoriser une expression c’est consisté de une somme ou différence au le produit de deux facteur.<br>x^2^-a^2^=(x-a)(x+a)<br>   ①                ②<br>② est le fractorision de ①<br>②on a mis (x-a) un facteur et (x-a)(x+a) le facteur commun.</p>]]></content>
      
      
      <categories>
          
          <category> Science Exact </category>
          
      </categories>
      
      
        <tags>
            
            <tag> note </tag>
            
            <tag> Science Exact </tag>
            
            <tag> ensemble </tag>
            
            <tag> multiplication </tag>
            
            <tag> nombre de fois </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Science Exact|1.5 Mesure</title>
      <link href="/2019/04/25/Science-Exact-1-5-Mesure/"/>
      <url>/2019/04/25/Science-Exact-1-5-Mesure/</url>
      
        <content type="html"><![CDATA[<h3 id="System-international（comput-cette-unite-de-base）"><a href="#System-international（comput-cette-unite-de-base）" class="headerlink" title="System international（comput cette unité de base）"></a>System international（comput cette unité de base）</h3><table><thead><tr><th></th><th>Mesure</th><th>Unitaire</th></tr></thead><tbody><tr><td>L</td><td>mètre</td><td>m</td></tr><tr><td>M</td><td>kilomètre</td><td>kg</td></tr><tr><td>J</td><td>candela</td><td>cd</td></tr><tr><td>T</td><td>second</td><td>s</td></tr><tr><td>ф</td><td>kelvin</td><td>k</td></tr><tr><td>N</td><td>mol</td><td></td></tr><tr><td>I</td><td>ampère</td><td>A</td></tr></tbody></table><h3 id="Definition"><a href="#Definition" class="headerlink" title="Définition"></a>Définition</h3><p>==On mesure la grandeur qui possède une dimension.==</p><p>le mol est une quantité de matière</p><p>la candela s’est à mesure d’éclat permuté pas d’ œil d’ humain d’une source lumineuse</p><p>On ne définie alors 7 dimensions de base.</p><h3 id="Des-multiple"><a href="#Des-multiple" class="headerlink" title="Des multiple"></a>Des multiple</h3><table><thead><tr><th>values</th><th>symble</th><th>lecture</th></tr></thead><tbody><tr><td>10^1</td><td></td><td>deca</td></tr><tr><td>10^2</td><td>H</td><td>*hecto</td></tr><tr><td>10^3</td><td>K</td><td>kilo</td></tr><tr><td>10^6</td><td></td><td>*méga</td></tr><tr><td>10^9</td><td></td><td>giga</td></tr><tr><td>10^12</td><td>T</td><td>*tira</td></tr></tbody></table><h3 id="Des-sous-multiple"><a href="#Des-sous-multiple" class="headerlink" title="Des sous multiple"></a>Des sous multiple</h3><table><thead><tr><th>values</th><th>symble</th><th>lecture</th></tr></thead><tbody><tr><td>10^-1</td><td>d</td><td>dèce</td></tr><tr><td>10^-2</td><td>c</td><td>centi</td></tr><tr><td>10^-3</td><td>m</td><td>milli</td></tr><tr><td>10^-6</td><td>μ</td><td>micro</td></tr><tr><td>10^-9</td><td>n</td><td>nano</td></tr><tr><td>10^-12</td><td>p</td><td>pico</td></tr></tbody></table><h3 id="‘ensemble"><a href="#‘ensemble" class="headerlink" title="‘ensemble"></a>‘ensemble</h3><table><thead><tr><th style="text-align:center">Préfixe</th><th style="text-align:center">Facteur</th><th style="text-align:center">Symbole</th><th style="text-align:center">Préfixe</th><th style="text-align:center">Facteur</th><th style="text-align:center">Symbole</th></tr></thead><tbody><tr><td style="text-align:center">exa</td><td style="text-align:center">1018</td><td style="text-align:center">E</td><td style="text-align:center">déci</td><td style="text-align:center">10-1</td><td style="text-align:center">d</td></tr><tr><td style="text-align:center">péta</td><td style="text-align:center">1015</td><td style="text-align:center">P</td><td style="text-align:center">centi</td><td style="text-align:center">10-2</td><td style="text-align:center">c</td></tr><tr><td style="text-align:center">téra</td><td style="text-align:center">1012</td><td style="text-align:center">T</td><td style="text-align:center">milli</td><td style="text-align:center">10-3</td><td style="text-align:center">m</td></tr><tr><td style="text-align:center">giga</td><td style="text-align:center">109</td><td style="text-align:center">G</td><td style="text-align:center">micro</td><td style="text-align:center">10-6</td><td style="text-align:center">u</td></tr><tr><td style="text-align:center">méga</td><td style="text-align:center">106</td><td style="text-align:center">M</td><td style="text-align:center">nano</td><td style="text-align:center">10-9</td><td style="text-align:center">n</td></tr><tr><td style="text-align:center">kilo</td><td style="text-align:center">103</td><td style="text-align:center">k</td><td style="text-align:center">pico</td><td style="text-align:center">10-12</td><td style="text-align:center">p</td></tr><tr><td style="text-align:center">hecto</td><td style="text-align:center">102</td><td style="text-align:center">h</td><td style="text-align:center">femto</td><td style="text-align:center">10-15</td><td style="text-align:center">f</td></tr><tr><td style="text-align:center">déca</td><td style="text-align:center">101</td><td style="text-align:center">da</td><td style="text-align:center">atto</td><td style="text-align:center">10-18</td><td style="text-align:center">a</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Science Exact </category>
          
      </categories>
      
      
        <tags>
            
            <tag> note </tag>
            
            <tag> Science Exact </tag>
            
            <tag> mesure </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>190425 note</title>
      <link href="/2019/04/25/190425-note/"/>
      <url>/2019/04/25/190425-note/</url>
      
        <content type="html"><![CDATA[<h3 id="grammaire"><a href="#grammaire" class="headerlink" title="grammaire"></a>grammaire</h3><h4 id="si"><a href="#si" class="headerlink" title="si"></a>si</h4><ul><li>si+presenté, futur simple</li><li>si+imparfait, conditionnel</li><li>si+plus passé, conditionnel passé<h4 id="futur"><a href="#futur" class="headerlink" title="futur"></a>futur</h4><h4 id="conditionnelle"><a href="#conditionnelle" class="headerlink" title="conditionnelle"></a>conditionnelle</h4><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5></li><li>possible</li><li>regret</li><li>imaginé</li><li>au cas où<h5 id="变位"><a href="#变位" class="headerlink" title="变位"></a>变位</h5>futur词根+imparfait词尾</li></ul><h3 id="vacabulaire"><a href="#vacabulaire" class="headerlink" title="vacabulaire"></a>vacabulaire</h3><h4 id="musique"><a href="#musique" class="headerlink" title="musique"></a>musique</h4><table><thead><tr><th>franais</th><th>chinoise</th></tr></thead><tbody><tr><td>travers le monde</td><td></td></tr><tr><td>mettre en place +qqch</td><td></td></tr><tr><td>se deroule</td><td></td></tr><tr><td>etre riche en</td><td></td></tr><tr><td>gaieté</td></tr></tbody></table><h4 id="menagere"><a href="#menagere" class="headerlink" title="ménagère"></a>ménagère</h4>]]></content>
      
      
      
        <tags>
            
            <tag> note française </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>190424-note</title>
      <link href="/2019/04/24/inbox(%E8%BF%87%E6%97%B6%E6%95%88%E6%80%A7%EF%BC%89/190424-note/"/>
      <url>/2019/04/24/inbox(%E8%BF%87%E6%97%B6%E6%95%88%E6%80%A7%EF%BC%89/190424-note/</url>
      
        <content type="html"><![CDATA[<p>musique</p><p>讲义[inbox]</p><p>音乐种类</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td></td><td></td></tr><tr><td></td><td></td></tr><tr><td></td></tr></tbody></table><p>音乐评论</p><p>TDMM：观点被质疑之后没有坚持，慌乱修改之后出错被发现</p><p>法语水平不足</p><p>理性探讨，即使观点有问题也没什么大不了的</p>]]></content>
      
      
      
        <tags>
            
            <tag> note française </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Présente |Cécile Corbel</title>
      <link href="/2019/04/24/inbox(%E8%BF%87%E6%97%B6%E6%95%88%E6%80%A7%EF%BC%89/Presentation/"/>
      <url>/2019/04/24/inbox(%E8%BF%87%E6%97%B6%E6%95%88%E6%80%A7%EF%BC%89/Presentation/</url>
      
        <content type="html"><![CDATA[<p>Emprunteur Arrietty</p><p>Cécile Corbel, née en1980 en Bretagne ,est une harpiste, auteure-compositrice-interprète et chanteuse française d’expression bretonne et japonaise. Ses influences sont multiples, en passant du folk aux musiques du monde, de la musique classique à la musique contemporaine.</p><p>Cécile Corbel chante dans de nombreuses langues, dont le français, le breton ou l’anglais et a interprété des chansons en allemand, espagnol, italien, gaélique, hébreu, turc et japonais.</p><hr><p>Biographie</p><p>Laurie Darmon a 23 ans et un parcours à plusieurs mesures. D’abord il y a la musique. Avant les mots d’enfant, avant les maux des grands, avant d’aller dormir, il y a le magnétophone et les chansons qu’un père compose après le travail, et tous les week-end, et qui sont là pour bercer ses enfants. Ensuite il y a le reste, le pire. La passion qui se déclare. La phrase tombe fatalement lorsqu’elle a 19 ans, après dix années de piano, un parcours scolaire studieux, de la guitare, de la batterie, des chansons nées entre deux cours ou dans la lumière nocturne des questionnements adolescents. Laurie poursuit alors des études de droit à la Sorbonne. Un amphi et des élèves concentrés autour d’elle, et sa mine un peu triste parmi eux. Des histoires juridiques qu’elle suit avec intérêt, mais qui ne la transcendent pas. L’arrière-goût de la frustration plane désormais un peu, puis un peu plus, et la pousse à faire ce pas qu’elle n’osait pas : la scène.</p><p>Un soir de novembre 2011, elle propose son premier concert. Elle a 20 ans, un piano sous les doigts, trois musiciens qui l’accompagnent, et une heure devant le public plongé dans le noir. Laurie entre sur scène, puis Laurie sort de scène, mais un monde la sépare d’avant cette heure de concert. Là-bas il n’y avait pas d’arrière-goût, ni d’anxiété. Il y avait des gestes libérateurs qui n’ont pas leur place au quotidien, des madeleines de Proust chargées des rêves refoulés d’une petite fille qui voulait toujours faire des spectacles à qui voulait bien regarder, et enfin, il y avait un échange comme elle n’en a jamais connu auparavant. Laurie se promet de tout faire pour que la scène se repasse à long terme. Diplômée en droit en juin 2013, elle peut enfin se consacrer à l’élaboration de son véritable projet musical. En septembre 2013, elle entame ainsi la réalisation de son premier disque, un EP de 5 titres dans lequel elle met ses souvenirs, son insouciance, son endurance et ses sourires. Elle s’entoure d’une équipe qui va, qui vient, qui est en mouvance et qui s’installe petit à petit, composée d’arrangeurs, de musiciens, d’ingénieurs du son, de directeurs artistiques. Les étapes à franchir ensuite – réalisation, enregistrement des instruments et des voix, mix et mastering – s’achèvent finalement en juillet 2014. Quelques neuf mois furent ainsi nécessaires à ce qu’elle décrit comme un accouchement d’elle-même, ce disque auto-produit qu’elle a pensé, repensé, construit, déconstruit, reconstruit, et qui est enfin né.</p><p>Bercée par la bossa nova et la variété française, Laurie propose une musique qui mélange les sons, les couleurs et les humeurs, et où les mots viennent battre la mesure dans un élan tantôt chanté, tantôt parlé. Si ses compositions ont toutes une première vie au seul son d’un piano, son instrument de formation, elle a cependant voulu leur donner un second souffle plus mature et s’est entourée de deux réalisateurs, Wladimir Pariente et Martin B. Janssen, et de plusieurs musiciens dont François Villevieille (du groupe Eléphant), avec lesquels, en prenant le temps qu’il fallait, elle est parvenue à approcher au mieux ce qu’il y avait dans sa tête. Un monde musical où les mélodies sont soleil, les rythmiques sont colères, et la voix murmure fort et s’emporte doucement. Une rencontre hasardeuse entre la chanson française, la poésie et le rap, sur laquelle Laurie pose des histoires personnelles. Elle y raconte une version libre de ce qui vient peupler une vie, et prend soin de ne jamais trop en dire pour laisser libre court à l’imagination naturelle des auditeurs.<br>Player Audio</p><p>劳里 达蒙<br>Laurie Darmon ,née en 1991, est une chanteur-compositrice et interprètea<br>Elle a un parcours à plusieurs mesures, un parcours scolaire studieux et un parcour de la musique .</p><p>Pendant ses etude de droit , elle suit des histoires juridiques avec intérêt mais  “L’arrière-goût de la frustration plane désormais un peu, puis un peu plus, et la pousse à composition” .Ses chansons nées entre deux cours ou dans la lumière nocturne des questionnements adolescents.</p><p>En 2015 ,elle peut enfin entame ainsi la réalisation de son premier disque dont le chanson “rupture” est ce qu’elle est composé a l’age de 16 et obtien de brillants succès.</p><p>Mostaki l’a loué : “Bercée par la bossa nova et la variété française, Laurie propose une musique qui mélange les sons, les couleurs et les humeurs, et où les mots viennent battre la mesure dans un élan tantôt chanté, tantôt parlé. “</p>]]></content>
      
      
      
        <tags>
            
            <tag> présente </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>法语助手使用限制</title>
      <link href="/2019/04/16/%E7%A0%B4%E9%99%A4%E6%B3%95%E8%AF%AD%E5%8A%A9%E6%89%8B%E4%BD%BF%E7%94%A8%E9%99%90%E5%88%B6/"/>
      <url>/2019/04/16/%E7%A0%B4%E9%99%A4%E6%B3%95%E8%AF%AD%E5%8A%A9%E6%89%8B%E4%BD%BF%E7%94%A8%E9%99%90%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="使用次数限制"><a href="#使用次数限制" class="headerlink" title="使用次数限制"></a>使用次数限制</h3><ul><li>windows+r 进入运行界面<br><img src="https://github.com/Catoblepases/Catoblepases.github.io/blob/master/img/1.jpg" alt></li><li>进入注册表<br>路径：<code>计算机\HKEY_CURRENT_USER\Software\Francophonie\Frhelper\Customer Info</code><br><img src="https://github.com/Catoblepases/Catoblepases.github.io/blob/master/img/2.jpg" alt></li><li>timeleft3为使用次数文件<br>修改基数十进制+使用次数</li></ul><h3 id="使用时间限制"><a href="#使用时间限制" class="headerlink" title="使用时间限制"></a>使用时间限制</h3><ul><li>路径：<code>C:\Users\Catoblepas\AppData\Roaming\Francochinois\frhelper</code></li><li>文件：study.db<br>达到时间限制后删除该文件即可消除历史时间信息存档</li></ul><h3 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h3><ul><li>官方 <a href="http://tinyurl.com/y64mdg9b" target="_blank" rel="noopener">http://tinyurl.com/y64mdg9b</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> publique </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Science Exact|1.1 les abréviations et systems mathématiques</title>
      <link href="/2019/02/21/Science-Exact-1-1-les-abreviation-et-systems-mathematique/"/>
      <url>/2019/02/21/Science-Exact-1-1-les-abreviation-et-systems-mathematique/</url>
      
        <content type="html"><![CDATA[<h3 id="Alphabet-Grec"><a href="#Alphabet-Grec" class="headerlink" title="Alphabet Grec"></a>Alphabet Grec</h3><p><img src="https://res.cloudinary.com/dpchw9rog/image/upload/v1557444910/1_ggmgpk.jpg" alt="1"></p><h3 id="mathematiques-en-francais"><a href="#mathematiques-en-francais" class="headerlink" title="mathématiques en français"></a>mathématiques en français</h3><h4 id="symbole"><a href="#symbole" class="headerlink" title="symbole"></a>symbole</h4><p><img src="https://res.cloudinary.com/dpchw9rog/image/upload/v1557444911/2_dwpd8c.png" alt="2"><br><img src="https://res.cloudinary.com/dpchw9rog/image/upload/v1557444910/3_zaje1b.png" alt="3"><br><img src="https://res.cloudinary.com/dpchw9rog/image/upload/v1557444911/4_x34apw.png" alt="4"><br><img src="https://res.cloudinary.com/dpchw9rog/image/upload/v1557444911/5_zq3vqc.png" alt="5"><br><img src="https://res.cloudinary.com/dpchw9rog/image/upload/v1557444911/6_dqtyrs.png" alt="6"></p><h4 id="concept-mathematique"><a href="#concept-mathematique" class="headerlink" title="concept mathématique"></a>concept mathématique</h4><p><img src="https://res.cloudinary.com/dpchw9rog/image/upload/v1557444911/6k_tbwufj.png" alt="6k"></p>]]></content>
      
      
      <categories>
          
          <category> Science Exact </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Science Exact </tag>
            
            <tag> Alphabet Grec </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
